{"id":51808,"date":"2009-02-11T20:27:00","date_gmt":"2009-02-11T20:27:00","guid":{"rendered":"\/2009\/04\/02\/blog-plugin-tutorial-for-ruby-on-rails"},"modified":"2009-08-30T00:37:50","modified_gmt":"2009-08-30T00:37:50","slug":"blog-plugin-tutorial-for-ruby-on-rails","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2009\/02\/11\/blog-plugin-tutorial-for-ruby-on-rails\/","title":{"rendered":"Blog plugin tutorial for Ruby on Rails"},"content":{"rendered":"<p><b>Update:<\/b> Bloggity does not require the Engines plugin to run if you are using Rails 2.3 or above (where the Engines plugin is baked in). -- Noted below by Bill.<br \/>\n<br \/><b>Update:<\/b> Added the plugin to github - <a href=\"http:\/\/github.com\/pullmonkey\/simple_blog\/tree\/master\">simple_blog<\/a>.  It is not production ready or really all that usable quite yet.<\/p>\n<p>Ok, so this a rant and I am sorry for that - but as simple as it is, I have been looking for a blog plugin lately.  The problem with the plugins I find is that I don't want to have to deal with the engines plugin or have the controllers, models, views, etc ... all extracted into my applications code.  I want it all external (hence a plugin) but let it be minimally configurable.<\/p>\n<p>So in my recent search for a blog plugin for rails, I came across two that look very useful, but each with their flaws:<br \/>\n1) <a href=\"http:\/\/github.com\/vigetlabs\/bloget\/tree\/master\">bloget<\/a> - Everything is extracted to my code space.  Why?  Yes, I realize that it is most likely because I will want to override things, but get out of my space and keep to yourself!  \ud83d\ude42 <br \/>\nProvide me a way to override things that I would need to (there really shouldn't be too many), after all it is ruby.<br \/>\n2) <a href=\"http:\/\/www.williambharding.com\/blog\/rails\/bloggity-an-evolving-rails-blog-plugin\/\">bloggity<\/a> - Uses the engines plugin! I have nothing against the engines plugin (I think it is well written and documented) but for a freaking blog plugin?!?  Why? <\/p>\n<p>Is there a third option?<br \/>\nGlad you asked - yes, there is a third option - I hate to say it, but do it right!  There's your third option.<br \/>\nOk, but really, if there is a third option (a third plugin), I would love to hear about it.<\/p>\n<p>Ok, so all that to lead up to a little plugin tutorial?  Well, it got your attention didn't it?<\/p>\n<h1>Starting from scratch<\/h1>\n<p>Ok, I guess I will start from scratch.  So let's get started.<\/p>\n<h2>Creating a plugin<\/h2>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> .\/script\/generate plugin simple_blog<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/lib<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/tasks<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/test<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/<span class=\"co\">README<\/span><tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/<span class=\"co\">MIT<\/span>-<span class=\"co\">LICENSE<\/span><tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/<span class=\"co\">Rakefile<\/span><tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/init.rb<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/install.rb<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/uninstall.rb<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/lib\/simple_blog.rb<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/tasks\/simple_blog_tasks.rake<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/test\/simple_blog_test.rb<tt>\r\n<\/tt>      create  vendor\/plugins\/simple_blog\/test\/test_helper.rb<tt>\r\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h2>Create the app directories for your plugin<\/h2>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> cd vendor\/plugins\/simple_blog\/  <span class=\"c\"># pretty important<\/span><tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> ls<tt>\r\n<\/tt>init.rb  install.rb  lib  <span class=\"co\">MIT<\/span>-<span class=\"co\">LICENSE<\/span>  <span class=\"co\">Rakefile<\/span>  <span class=\"co\">README<\/span>  tasks  test  uninstall.rb<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir app<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/models<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/controllers<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/views<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/helpers<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> ls app\/<tt>\r\n<\/tt>controllers  helpers  models  views<tt>\r\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Well that was easy, so let's move on.<\/p>\n<p><\/p>\n<h1>Models, Views, Controllers and Helpers - Living as one in my plugin<\/h1>\n<h2>Models<\/h2>\n<p>Ok, so we have a clear path for where our models, controllers, views, and helpers should live, right?<br \/>\nFor simplicity, let's just have a post and comment model - you have all seen this a billion times.<\/p>\n<h3>Models: vendor\/plugins\/simple_blog\/app\/models\/post.rb<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">class<\/span> <span class=\"cl\">Post<\/span> &lt; <span class=\"co\">ActiveRecord<\/span>::<span class=\"co\">Base<\/span><tt>\r\n<\/tt>  has_many <span class=\"sy\">:comments<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>Models: vendor\/plugins\/simple_blog\/app\/models\/comment.rb<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">class<\/span> <span class=\"cl\">Comment<\/span> &lt; <span class=\"co\">ActiveRecord<\/span>::<span class=\"co\">Base<\/span><tt>\r\n<\/tt>  belongs_to <span class=\"sy\">:post<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>And there you have it.<br \/>\nSo what do you do to tell your rails application about your models?<br \/>\nSimple - inside vendor\/plugins\/simple_blog\/init.rb - add these lines<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">model_path = <span class=\"co\">File<\/span>.join(directory, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">app<\/span><span class=\"dl\">'<\/span><\/span>, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">models<\/span><span class=\"dl\">'<\/span><\/span>)<tt>\r\n<\/tt><span class=\"gv\">$LOAD_PATH<\/span> &lt;&lt; model_path<tt>\r\n<\/tt><span class=\"co\">ActiveSupport<\/span>::<span class=\"co\">Dependencies<\/span>.load_paths &lt;&lt; model_path<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>Ok, so let's test it out.<\/h3>\n<p>Step 1 - we will need some default migrations for the model to use.<br \/>\nPost migration:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><strong>15<\/strong><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> .\/script\/generate migration post<tt>\r\n<\/tt><span class=\"c\"># This is what mine looks like<\/span><tt>\r\n<\/tt><span class=\"r\">class<\/span> <span class=\"cl\">Post<\/span> &lt; <span class=\"co\">ActiveRecord<\/span>::<span class=\"co\">Migration<\/span><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"pc\">self<\/span>.up<tt>\r\n<\/tt>    create_table <span class=\"sy\">:posts<\/span> <span class=\"r\">do<\/span> |t|<tt>\r\n<\/tt>      t.string <span class=\"sy\">:subject<\/span><tt>\r\n<\/tt>      t.text   <span class=\"sy\">:body<\/span><tt>\r\n<\/tt>      t.timestamps<tt>\r\n<\/tt>    <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"pc\">self<\/span>.down<tt>\r\n<\/tt>    drop_table <span class=\"sy\">:posts<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>And then the comment migration:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> .\/script\/generate migration comment<tt>\r\n<\/tt><span class=\"c\"># This is what mine looks like<\/span><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"pc\">self<\/span>.up<tt>\r\n<\/tt>    create_table <span class=\"sy\">:comments<\/span> <span class=\"r\">do<\/span> |t|<tt>\r\n<\/tt>      t.string <span class=\"sy\">:username<\/span><tt>\r\n<\/tt>      t.text   <span class=\"sy\">:body<\/span><tt>\r\n<\/tt>      t.references <span class=\"sy\">:post<\/span><tt>\r\n<\/tt>      t.timestamps<tt>\r\n<\/tt>    <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"pc\">self<\/span>.down<tt>\r\n<\/tt>    drop_table <span class=\"sy\">:comments<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Run the migrations:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> rake db<span class=\"sy\">:migrate<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>That was all just setup - now for the actual testing:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><strong>15<\/strong><tt>\r\n<\/tt>16<tt>\r\n<\/tt>17<tt>\r\n<\/tt>18<tt>\r\n<\/tt>19<tt>\r\n<\/tt><strong>20<\/strong><tt>\r\n<\/tt>21<tt>\r\n<\/tt>22<tt>\r\n<\/tt>23<tt>\r\n<\/tt>24<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> .\/script\/console<tt>\r\n<\/tt><span class=\"co\">Loading<\/span> development environment (<span class=\"co\">Rails<\/span> <span class=\"fl\">2.2<\/span>.<span class=\"i\">2<\/span>)<tt>\r\n<\/tt>&gt;&gt; <span class=\"co\">Comment<\/span>.new<tt>\r\n<\/tt>=&gt; <span class=\"c\">#&lt;Comment id: nil, username: nil, body: nil, post_id: nil, created_at: nil, updated_at: nil&gt;<\/span><tt>\r\n<\/tt>&gt;&gt; <span class=\"co\">Post<\/span>.new<tt>\r\n<\/tt>=&gt; <span class=\"c\">#&lt;Post id: nil, subject: nil, body: nil, created_at: nil, updated_at: nil&gt;<\/span><tt>\r\n<\/tt>&gt;&gt; p = <span class=\"co\">Post<\/span>.create(<span class=\"sy\">:subject<\/span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Test 1<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"sy\">:body<\/span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">My Body<\/span><span class=\"dl\">&quot;<\/span><\/span>)<tt>\r\n<\/tt>=&gt; <span class=\"c\">#&lt;Post id: 1, subject: &quot;Test 1&quot;, body: &quot;My Body&quot;, created_at: &quot;2009-02-11 19:09:25&quot;, updated_at: &quot;2009-02-11 19:09:25&quot;&gt;<\/span><tt>\r\n<\/tt>&gt;&gt; p.body<tt>\r\n<\/tt>=&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">My Body<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>&gt;&gt; p.subject<tt>\r\n<\/tt>=&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Test 1<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>&gt;&gt; p.new_record?<tt>\r\n<\/tt>=&gt; <span class=\"pc\">false<\/span><tt>\r\n<\/tt>&gt;&gt; p.comments<tt>\r\n<\/tt>=&gt; []<tt>\r\n<\/tt>&gt;&gt; c = <span class=\"co\">Comment<\/span>.create(<span class=\"sy\">:username<\/span> =&gt; <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">pullmonkey<\/span><span class=\"dl\">'<\/span><\/span>, <span class=\"sy\">:body<\/span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">this is simple<\/span><span class=\"dl\">&quot;<\/span><\/span>)<tt>\r\n<\/tt>=&gt; <span class=\"c\">#&lt;Comment id: 1, username: &quot;pullmonkey&quot;, body: &quot;this is simple&quot;, post_id: nil, created_at: &quot;2009-02-11 19:10:01&quot;, updated_at: &quot;2009-02-11 19:10:01&quot;&gt;<\/span><tt>\r\n<\/tt>&gt;&gt; p.comments &lt;&lt; c<tt>\r\n<\/tt>=&gt; [<span class=\"c\">#&lt;Comment id: 1, username: &quot;pullmonkey&quot;, body: &quot;this is simple&quot;, post_id: 1, created_at: &quot;2009-02-11 19:10:01&quot;, updated_at: &quot;2009-02-11 19:10:06&quot;&gt;]<\/span><tt>\r\n<\/tt>&gt;&gt; p.comments<tt>\r\n<\/tt>=&gt; [<span class=\"c\">#&lt;Comment id: 1, username: &quot;pullmonkey&quot;, body: &quot;this is simple&quot;, post_id: 1, created_at: &quot;2009-02-11 19:10:01&quot;, updated_at: &quot;2009-02-11 19:10:06&quot;&gt;]<\/span><tt>\r\n<\/tt>&gt;&gt; <span class=\"co\">Post<\/span>.first.comments<tt>\r\n<\/tt>=&gt; [<span class=\"c\">#&lt;Comment id: 1, username: &quot;pullmonkey&quot;, body: &quot;this is simple&quot;, post_id: 1, created_at: &quot;2009-02-11 19:10:01&quot;, updated_at: &quot;2009-02-11 19:10:06&quot;&gt;]<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>That's probably good enough.  We have a working model and relationships.  The best part is that all the code is still in the plugin.<br \/>\nWhat does my code space contain?<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><strong>15<\/strong><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> ls -l app\/**<tt>\r\n<\/tt>app\/controllers:<tt>\r\n<\/tt>total <span class=\"i\">4<\/span><tt>\r\n<\/tt>-rw-rw-r--  <span class=\"i\">1<\/span> pullmonkey pullmonkey <span class=\"i\">720<\/span> <span class=\"co\">Feb<\/span> <span class=\"i\">11<\/span> <span class=\"i\">11<\/span>:<span class=\"i\">00<\/span> application.rb<tt>\r\n<\/tt><tt>\r\n<\/tt>app\/helpers:<tt>\r\n<\/tt>total <span class=\"i\">4<\/span><tt>\r\n<\/tt>-rw-rw-r--  <span class=\"i\">1<\/span> pullmonkey pullmonkey <span class=\"i\">115<\/span> <span class=\"co\">Feb<\/span> <span class=\"i\">11<\/span> <span class=\"i\">11<\/span>:<span class=\"i\">00<\/span> application_helper.rb<tt>\r\n<\/tt><tt>\r\n<\/tt>app\/models:<tt>\r\n<\/tt>total <span class=\"i\">0<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>app\/views:<tt>\r\n<\/tt>total <span class=\"i\">4<\/span><tt>\r\n<\/tt>drwxrwxr-x  <span class=\"i\">2<\/span> pullmonkey pullmonkey <span class=\"i\">4096<\/span> <span class=\"co\">Feb<\/span> <span class=\"i\">11<\/span> <span class=\"i\">11<\/span>:<span class=\"i\">00<\/span> layouts<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>\nJust the defaults - neat \ud83d\ude42<\/p>\n<h2>Controllers<\/h2>\n<p>In much the same way as models, we can easily use controllers from our plugin.  No extracting, no engines plugin.<\/p>\n<h3>Controllers: vendor\/plugins\/simple_blog\/app\/controllers\/posts_controller.rb<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><strong>15<\/strong><tt>\r\n<\/tt>16<tt>\r\n<\/tt>17<tt>\r\n<\/tt>18<tt>\r\n<\/tt>19<tt>\r\n<\/tt><strong>20<\/strong><tt>\r\n<\/tt>21<tt>\r\n<\/tt>22<tt>\r\n<\/tt>23<tt>\r\n<\/tt>24<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">class<\/span> <span class=\"cl\">PostsController<\/span> &lt; <span class=\"co\">ApplicationController<\/span><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">index<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@posts<\/span> = <span class=\"co\">Post<\/span>.all<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">show<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.find(params[<span class=\"sy\">:id<\/span>])<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">new<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.new<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">create<\/span><tt>\r\n<\/tt>    <span class=\"r\">if<\/span> <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.create(params[<span class=\"sy\">:post<\/span>])<tt>\r\n<\/tt>      flash[<span class=\"sy\">:notice<\/span>] = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Post Created<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>      redirect_to <span class=\"sy\">:action<\/span> =&gt; <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">index<\/span><span class=\"dl\">'<\/span><\/span><tt>\r\n<\/tt>    <span class=\"r\">else<\/span><tt>\r\n<\/tt>      flash[<span class=\"sy\">:error<\/span>] = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Post Not Created<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>      render <span class=\"sy\">:action<\/span> =&gt; <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">new<\/span><span class=\"dl\">'<\/span><\/span><tt>\r\n<\/tt>    <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"c\">#.... more code<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>Controllers: vendor\/plugins\/simple_blog\/app\/controllers\/comments_controller.rb<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">class<\/span> <span class=\"cl\">CommentsController<\/span> &lt; <span class=\"co\">ApplicationController<\/span><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">index<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@comments<\/span> = <span class=\"co\">Comment<\/span>.find_all_by_post_id(params[<span class=\"sy\">:post_id<\/span>])<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"c\">#.... more code<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Now, to register the controllers, add the following to vendor\/plugins\/simple_blog\/init.rb:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">controller_path = <span class=\"co\">File<\/span>.join(directory, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">app<\/span><span class=\"dl\">'<\/span><\/span>, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">controllers<\/span><span class=\"dl\">'<\/span><\/span>)<tt>\r\n<\/tt><span class=\"gv\">$LOAD_PATH<\/span> &lt;&lt; controller_path<tt>\r\n<\/tt><span class=\"co\">ActiveSupport<\/span>::<span class=\"co\">Dependencies<\/span>.load_paths &lt;&lt; controller_path<tt>\r\n<\/tt>config.controller_paths &lt;&lt; controller_path<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Ok, before we can really test this we will need to do the views, so keep going.<\/p>\n<p><\/p>\n<h2>Views<\/h2>\n<p>Create your view directories:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/views\/posts<tt>\r\n<\/tt>pullmonkey<span class=\"er\">$<\/span> mkdir -p app\/views\/comments<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Create your views:<br \/>\nFor this example, I will just create one, then we will test it.<\/p>\n<h3>Views: vendor\/plugins\/simple_blog\/app\/views\/posts\/index.html.erb<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">&lt;h1&gt;<span class=\"co\">Posts<\/span>&lt;<span class=\"rx\"><span class=\"dl\">\/<\/span><span class=\"k\">h1&gt;<tt>\r\n<\/tt>&lt;% @posts.each do |post| -%&gt;<tt>\r\n<\/tt>  &lt;h2&gt;&lt;%= h post.subject %&gt;&lt;<\/span><span class=\"dl\">\/<\/span><\/span>h2&gt;<tt>\r\n<\/tt>  &lt;%= post.body <span class=\"s\"><span class=\"dl\">%&gt;<\/span><span class=\"k\"><tt>\r\n<\/tt>  &lt;h3<\/span><span class=\"dl\">&gt;<\/span><\/span><span class=\"co\">Comments<\/span>&lt;<span class=\"rx\"><span class=\"dl\">\/<\/span><span class=\"k\">h3&gt;<tt>\r\n<\/tt>  &lt;% post.comments.each do |comment| -%&gt;<tt>\r\n<\/tt>    &lt;b&gt;by &lt;%= comment.username %&gt;&lt;<\/span><span class=\"dl\">\/<\/span><\/span>b&gt;&lt;br\/&gt;<tt>\r\n<\/tt>    &lt;%= comment.body <span class=\"s\"><span class=\"dl\">%&gt;<\/span><span class=\"k\">&lt;br\/<\/span><span class=\"dl\">&gt;<\/span><\/span><tt>\r\n<\/tt>    &lt;br\/&gt;<tt>\r\n<\/tt>  &lt;% <span class=\"r\">end<\/span> -<span class=\"s\"><span class=\"dl\">%&gt;<\/span><span class=\"k\"><tt>\r\n<\/tt>&lt;% end -%<\/span><span class=\"dl\">&gt;<\/span><\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>Append your view paths:<\/h3>\n<p>If you don't do this next step, you will very likely see an error message like this:<br \/>\nMissing template posts\/index.erb in view path \/home\/pullmonkey\/rails_projects\/simple_blog\/app\/views:<\/p>\n<p>So let's add it. <br \/>\nThere are at least two ways to do this.  1) Added to your controllers individually or 2) Add to application controller globally.<br \/>\nI prefer the less obtrusive, so let's go with number 1.<br \/>\nFor this test, we will just work with the posts controller, so open it up again and add this line:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"pc\">self<\/span>.append_view_path(<span class=\"co\">File<\/span>.join(<span class=\"co\">File<\/span>.dirname(<span class=\"pc\">__FILE__<\/span>), <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">..<\/span><span class=\"dl\">'<\/span><\/span>, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">views<\/span><span class=\"dl\">'<\/span><\/span>))<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>So your file should look like this now:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt><strong>5<\/strong><tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt><strong>15<\/strong><tt>\r\n<\/tt>16<tt>\r\n<\/tt>17<tt>\r\n<\/tt>18<tt>\r\n<\/tt>19<tt>\r\n<\/tt><strong>20<\/strong><tt>\r\n<\/tt>21<tt>\r\n<\/tt>22<tt>\r\n<\/tt>23<tt>\r\n<\/tt>24<tt>\r\n<\/tt><strong>25<\/strong><tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">class<\/span> <span class=\"cl\">PostsController<\/span> &lt; <span class=\"co\">ApplicationController<\/span><tt>\r\n<\/tt>  <span class=\"pc\">self<\/span>.append_view_path(<span class=\"co\">File<\/span>.join(<span class=\"co\">File<\/span>.dirname(<span class=\"pc\">__FILE__<\/span>), <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">..<\/span><span class=\"dl\">'<\/span><\/span>, <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">views<\/span><span class=\"dl\">'<\/span><\/span>))<tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">index<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@posts<\/span> = <span class=\"co\">Post<\/span>.all<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">show<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.find(params[<span class=\"sy\">:id<\/span>])<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">new<\/span><tt>\r\n<\/tt>    <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.new<tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">create<\/span><tt>\r\n<\/tt>    <span class=\"r\">if<\/span> <span class=\"iv\">@post<\/span> = <span class=\"co\">Post<\/span>.create(params[<span class=\"sy\">:post<\/span>])<tt>\r\n<\/tt>      flash[<span class=\"sy\">:notice<\/span>] = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Post Created<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>      redirect_to <span class=\"sy\">:action<\/span> =&gt; <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">index<\/span><span class=\"dl\">'<\/span><\/span><tt>\r\n<\/tt>    <span class=\"r\">else<\/span><tt>\r\n<\/tt>      flash[<span class=\"sy\">:error<\/span>] = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Post Not Created<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\r\n<\/tt>      render <span class=\"sy\">:action<\/span> =&gt; <span class=\"s\"><span class=\"dl\">'<\/span><span class=\"k\">new<\/span><span class=\"dl\">'<\/span><\/span><tt>\r\n<\/tt>    <span class=\"r\">end<\/span><tt>\r\n<\/tt>  <span class=\"r\">end<\/span><tt>\r\n<\/tt><span class=\"r\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>Time to test<\/h3>\n<p>Start your web server - .\/script\/server<br \/>\nBrowse to http:\/\/localhost:3000\/posts<br \/>\nYou should see the post we created up above via Post.create(...) and its associated comment that we also created above.<\/p>\n<p><b>Note:<\/b>Feel free to overwrite any of the views.  This can be done simply for the posts index view by creating the same file under RAILS_ROOT\/app\/views\/posts\/index.html.erb and doing what you'd like.<\/p>\n<p><\/p>\n<h1>That's it for part 1<\/h1>\n<p>Ok, so that's part 1.  The goal was to keep everything external and I think we succeeded (aside from migrations).<br \/>\nNo offense to those that use engines or extract files into one's application's space, we all have our ways - the above is what I prefer.<\/p>\n<p>\nPart 2 will consist mainly of filling this out a bit more and further discussion on adding helpers, routes and migrations to your plugin without interfering in the application's code space.<\/p>\n<p>As always, have fun and good luck!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Update: Bloggity does not require the Engines plugin to run if you are using Rails 2.3 or above (where the Engines plugin is baked in). &#8212; Noted below by Bill. Update: Added the plugin to github &#8211; simple_blog. It is not production ready or really all that usable quite yet. Ok, so this a rant [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,3,5,30],"tags":[218,210,211,43,50],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/51808"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=51808"}],"version-history":[{"count":3,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/51808\/revisions"}],"predecessor-version":[{"id":57337,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/51808\/revisions\/57337"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=51808"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=51808"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=51808"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}