{"id":47046,"date":"2008-08-13T19:15:00","date_gmt":"2008-08-13T19:15:00","guid":{"rendered":"\/2008\/08\/13\/modularized-models-and-associations-in-activerecord"},"modified":"2009-08-30T04:40:03","modified_gmt":"2009-08-30T04:40:03","slug":"modularized-models-and-associations-in-activerecord","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2008\/08\/13\/modularized-models-and-associations-in-activerecord\/","title":{"rendered":"Modularized Models and Associations in ActiveRecord"},"content":{"rendered":"<p>Have you ever encountered this error?<\/p>\n<h2>wrong constant name X::YAssociationExtension<\/h2>\n<p>I found this error when dealing with acts_as_versioned for one my models.  I would have found it eventually with any association I would have setup in this case, so it is not acts_as_versioned's fault.<br \/>\nI have an application with various parts so I create some of my models like this:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">.\/script\/generate model module_name::model_name<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>\nSo the fix is pretty simple, instead of winding up with ModuleName::ModelAssociationExtension or whatever, you want your extention module name to be ModelAssociationExtension. <br \/>\nHere is the method where the code breaks for me:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">def<\/span> <span class=\"fu\">create_extension_modules<\/span>(association_id, block_extension, extensions)<tt>\n<\/tt>  <span class=\"r\">if<\/span> block_extension<tt>\n<\/tt>    extension_module_name = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"il\"><span class=\"dl\">#{<\/span><span class=\"pc\">self<\/span>.to_s<span class=\"dl\">}<\/span><\/span><span class=\"il\"><span class=\"dl\">#{<\/span>association_id.to_s.camelize<span class=\"dl\">}<\/span><\/span><span class=\"k\">AssociationExtension<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><tt>\n<\/tt>    silence_warnings <span class=\"r\">do<\/span><tt>\n<\/tt>      <span class=\"co\">Object<\/span>.const_set(extension_module_name, <span class=\"co\">Module<\/span>.new(&amp;block_extension))<tt>\n<\/tt>    <span class=\"r\">end<\/span><tt>\n<\/tt>    Array(extensions).push(extension_module_name.constantize)<tt>\n<\/tt>  <span class=\"r\">else<\/span><tt>\n<\/tt>    Array(extensions)<tt>\n<\/tt>  <span class=\"r\">end<\/span><tt>\n<\/tt><span class=\"r\">end<\/span><tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Here is the fix, on line 3, you will note the demodulize addition:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">def<\/span> <span class=\"fu\">create_extension_modules<\/span>(association_id, block_extension, extensions)<tt>\n<\/tt>  <span class=\"r\">if<\/span> block_extension<tt>\n<\/tt>    extension_module_name = <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"il\"><span class=\"dl\">#{<\/span><span class=\"pc\">self<\/span>.to_s.demodulize<span class=\"dl\">}<\/span><\/span><span class=\"il\"><span class=\"dl\">#{<\/span>association_id.to_s.camelize<span class=\"dl\">}<\/span><\/span><span class=\"k\">AssociationExtension<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><tt>\n<\/tt>    silence_warnings <span class=\"r\">do<\/span><tt>\n<\/tt>      <span class=\"co\">Object<\/span>.const_set(extension_module_name, <span class=\"co\">Module<\/span>.new(&amp;block_extension))<tt>\n<\/tt>    <span class=\"r\">end<\/span><tt>\n<\/tt>    Array(extensions).push(extension_module_name.constantize)<tt>\n<\/tt>  <span class=\"r\">else<\/span><tt>\n<\/tt>    Array(extensions)<tt>\n<\/tt>  <span class=\"r\">end<\/span><tt>\n<\/tt><span class=\"r\">end<\/span><tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>I threw the corrected code into a library - RAILS_ROOT\/lib\/fix_active_record_create_extension_for_modules.rb.  Make sure to open up the necessary modules to overwrite the method itself, I.e., like this:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span class=\"r\">module<\/span> <span class=\"cl\">ActiveRecord<\/span><tt>\n<\/tt>  <span class=\"r\">module<\/span> <span class=\"cl\">Associations<\/span><tt>\n<\/tt>    <span class=\"r\">module<\/span> <span class=\"cl\">ClassMethods<\/span><tt>\n<\/tt>      <span class=\"c\"># the code above fits right here<\/span><tt>\n<\/tt>    <span class=\"r\">end<\/span><tt>\n<\/tt>  <span class=\"r\">end<\/span><tt>\n<\/tt><span class=\"r\">end<\/span><tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Short and sweet, let me know if you have a better method for handling this.  <\/p>\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Have you ever encountered this error? wrong constant name X::YAssociationExtension I found this error when dealing with acts_as_versioned for one my models. I would have found it eventually with any association I would have setup in this case, so it is not acts_as_versioned&#8217;s fault. I have an application with various parts so I create some [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,3,5,9],"tags":[54,55,53,210,211,43],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/47046"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=47046"}],"version-history":[{"count":1,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/47046\/revisions"}],"predecessor-version":[{"id":57355,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/47046\/revisions\/57355"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=47046"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=47046"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=47046"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}