{"id":57469,"date":"2010-01-06T21:17:57","date_gmt":"2010-01-06T21:17:57","guid":{"rendered":"http:\/\/pullmonkey.com\/?p=57469"},"modified":"2010-01-06T21:20:06","modified_gmt":"2010-01-06T21:20:06","slug":"post_ofc_graph_as_image","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2010\/01\/06\/post_ofc_graph_as_image\/","title":{"rendered":"POST OFC Graph as Image"},"content":{"rendered":"<p>I was <a href=\"http:\/\/github.com\/inbox\/365812#reply\">asked recently (well sort of) to give an example of saving an image to the server<\/a>.  If you look at <a href=\"http:\/\/teethgrinder.co.uk\/open-flash-chart-2\/adv-upload-image.php\">teethgrinder's example for this<\/a>, you will see that he has made available an external interface to do just that - POST your graph as png raw data to your server for storage.  This has many benefits such as saving the image for use in a PDF report or for printing, since we know at times it is a bit troublesome to print the embedded flash object.<br \/>\nI think the main problem people are having with this is the receiving of the image data post - see the upload_image method below.  Also, teethgrinder's example never really says where to make the post_image() call.  So I touch on both in the code below.<br \/>\nHere is an example of the png that is saved when I did this for the chart in the previous example:<br \/>\n<img loading=\"lazy\" src=\"http:\/\/pullmonkey.com\/wp-content\/uploads\/2010\/01\/tmp_image.png\" alt=\"OFC Saved Image\" title=\"OFC Saved Image\" width=\"550\" height=\"300\" class=\"aligncenter size-full wp-image-57468\" srcset=\"http:\/\/pullmonkey.com\/wp-content\/uploads\/2010\/01\/tmp_image.png 550w, http:\/\/pullmonkey.com\/wp-content\/uploads\/2010\/01\/tmp_image-300x163.png 300w\" sizes=\"(max-width: 550px) 100vw, 550px\" \/><\/p>\n<p>Well, let's just get right in to the code.<br \/>\nThe controller contains the same code as <a href=\"http:\/\/pullmonkey.com\/2010\/01\/05\/open-flash-chart-ii-x-axis-date-and-time\/\">my last post<\/a> with only a few minor changes to the index method and the addition of the upload_image method.<br \/>\nIn the <b>controller<\/b>, I have this:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt>5<tt>\r\n<\/tt>6<tt>\r\n<\/tt>7<tt>\r\n<\/tt>8<tt>\r\n<\/tt>9<tt>\r\n<\/tt><strong>10<\/strong><tt>\r\n<\/tt>11<tt>\r\n<\/tt>12<tt>\r\n<\/tt>13<tt>\r\n<\/tt>14<tt>\r\n<\/tt>15<tt>\r\n<\/tt>16<tt>\r\n<\/tt>17<tt>\r\n<\/tt>18<tt>\r\n<\/tt>19<tt>\r\n<\/tt><strong>20<\/strong><tt>\r\n<\/tt>21<tt>\r\n<\/tt>22<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><span style=\"color:#080;font-weight:bold\">class<\/span> <span style=\"color:#B06;font-weight:bold\">TestItController<\/span> &lt; <span style=\"color:#036;font-weight:bold\">ApplicationController<\/span><tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">def<\/span> <span style=\"color:#06B;font-weight:bold\">index<\/span><tt>\r\n<\/tt>    <span style=\"color:#888\"># note the user of open_flash_chart_object_from_hash instead of just open_flash_chart_object<\/span><tt>\r\n<\/tt>    <span style=\"color:#888\"># this allows you to pass in the id of the div you want the the chart to be in<\/span><tt>\r\n<\/tt>    <span style=\"color:#888\"># this is useful for when we need to findSWF by this id<\/span><tt>\r\n<\/tt>    <span style=\"color:#33B\">@graph<\/span> = open_flash_chart_object_from_hash(<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">\/test_it\/chart<\/span><span style=\"color:#710\">&quot;<\/span><\/span>, <span style=\"color:#A60\">:div_name<\/span> =&gt; <span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">my_chart<\/span><span style=\"color:#710\">&quot;<\/span><\/span>)<tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span style=\"color:#888\"># added to recieve the post data for the OFC png image of the OFC graph<\/span><tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">def<\/span> <span style=\"color:#06B;font-weight:bold\">upload_image<\/span><tt>\r\n<\/tt>    name = <span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">tmp_image.png<\/span><span style=\"color:#710\">&quot;<\/span><\/span> || params[<span style=\"color:#A60\">:name<\/span>]<tt>\r\n<\/tt>    <span style=\"color:#888\"># the save_image method that is provided by the OFC swf file sends raw post data, so get to it like this<\/span><tt>\r\n<\/tt>    data = request.raw_post<tt>\r\n<\/tt>    <span style=\"color:#036;font-weight:bold\">File<\/span>.open(<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"background:#ddd;color:black\"><span style=\"background:#ddd;font-weight:bold;color:#666\">#{<\/span><span style=\"color:#036;font-weight:bold\">RAILS_ROOT<\/span><span style=\"background:#ddd;font-weight:bold;color:#666\">}<\/span><\/span><span style=\"\">\/tmp\/<\/span><span style=\"background:#ddd;color:black\"><span style=\"background:#ddd;font-weight:bold;color:#666\">#{<\/span>name<span style=\"background:#ddd;font-weight:bold;color:#666\">}<\/span><\/span><span style=\"color:#710\">&quot;<\/span><\/span>, <span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">wb<\/span><span style=\"color:#710\">&quot;<\/span><\/span>) { |f| f.write(data) } <span style=\"color:#080;font-weight:bold\">if<\/span> data<tt>\r\n<\/tt>    render <span style=\"color:#A60\">:nothing<\/span> =&gt; <span style=\"color:#038;font-weight:bold\">true<\/span><tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">end<\/span><tt>\r\n<\/tt><tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">def<\/span> <span style=\"color:#06B;font-weight:bold\">chart<\/span><tt>\r\n<\/tt>    <span style=\"color:#888\"># same code from here - http:\/\/pullmonkey.com\/2010\/01\/05\/open-flash-chart-ii-x-axis-date-and-time\/ <\/span><tt>\r\n<\/tt>    ...<tt>\r\n<\/tt>  <span style=\"color:#080;font-weight:bold\">end<\/span><tt>\r\n<\/tt><span style=\"color:#080;font-weight:bold\">end<\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>So just <b>note<\/b> the use of open_flash_chart_object_from_hash() in the index method, this way we can pass in the id of the div.<br \/>\nIn the <b>view<\/b>, I have this:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\r\n<\/tt>2<tt>\r\n<\/tt>3<tt>\r\n<\/tt>4<tt>\r\n<\/tt>5<tt>\r\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">&lt;<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">%=<\/span><span style=\"\"> javascript_include_tag 'swfobject.js' %&gt;<tt>\r\n<\/tt>&lt;%<\/span><span style=\"color:#710\">=<\/span><\/span> <span style=\"color:#33B\">@graph<\/span> %&gt;<tt>\r\n<\/tt>&lt;<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">%=<\/span><span style=\"\"> save_as_image(&quot;http:\/\/localhost:3000\/test_it\/upload_image?name<\/span><span style=\"color:#710\">=<\/span><\/span>tmp.png<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">, :id =&gt; <\/span><span style=\"color:#710\">&quot;<\/span><\/span>my_chart<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">) %&gt;<tt>\r\n<\/tt>&lt;br\/&gt;<tt>\r\n<\/tt>&lt;%= button_to_function <\/span><span style=\"color:#710\">&quot;<\/span><\/span><span style=\"color:#036;font-weight:bold\">Save<\/span> <span style=\"color:#036;font-weight:bold\">Image<\/span><span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\">, <\/span><span style=\"color:#710\">&quot;<\/span><\/span>post_image()<span style=\"background-color:#fff0f0;color:#D20\"><span style=\"color:#710\">&quot;<\/span><span style=\"\"> %&gt;<\/span><\/span><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>\nReally the only difference from what we would normally have in our view is that I am using the save image setup method that was added to the <a href=\"http:\/\/github.com\/pullmonkey\/open_flash_chart\/commit\/14ff9735c67e9b424caa129e8e06dc910e73681f\">open flash chart ruby on rails plugin<\/a> in the last couple hours (as of this post).  The save_image method takes some arguments, mainly the url to post the image data to and the id of the chart we setup in the controller.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I was asked recently (well sort of) to give an example of saving an image to the server. If you look at teethgrinder&#8217;s example for this, you will see that he has made available an external interface to do just that &#8211; POST your graph as png raw data to your server for storage. This [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,31,4,26,51,14,5,9,28,30],"tags":[42,52,109,40,218,110,210,211,43],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57469"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=57469"}],"version-history":[{"count":3,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57469\/revisions"}],"predecessor-version":[{"id":57471,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57469\/revisions\/57471"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=57469"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=57469"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=57469"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}