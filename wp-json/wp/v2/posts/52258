{"id":52258,"date":"2009-03-26T18:05:00","date_gmt":"2009-03-26T18:05:00","guid":{"rendered":"\/2009\/03\/26\/ece231-spring-2009-programming-assignment-3"},"modified":"2009-08-30T00:16:54","modified_gmt":"2009-08-30T00:16:54","slug":"ece231-spring-2009-programming-assignment-3","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2009\/03\/26\/ece231-spring-2009-programming-assignment-3\/","title":{"rendered":"ECE231 &#8211; Spring 2009 &#8211; Programming Assignment 3"},"content":{"rendered":"<p>This is a step-by-step tutorial for this assignment and an explanation of the basics of how it works for those that are having a difficult time understanding or just are stuck somewhere. To <a href=\"http:\/\/www.unm.edu\/~speralta\/progs\/ece231assn3.htm\">view the assignment click here<\/a>.<\/p>\n<p>So for this assignment we are going to be doing a lot of math calculations so we are going to need the include the both the <b>iostream<\/b> and the <b>cmath<\/b> libraries. We will also need the value of <b>pi<\/b>.<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"pp\">#include<\/span> <span class=\"ic\">&lt;iostream&gt;<\/span><tt>\n<\/tt><span class=\"pp\">#include<\/span> <span class=\"ic\">&lt;cmath&gt;<\/span><tt>\n<\/tt>using namespace std;<tt>\n<\/tt><tt>\n<\/tt><span class=\"pp\">#define<\/span> PI <span class=\"fl\">3<\/span><span class=\"fl\">.141592654<\/span><tt>\n<\/tt>or<tt>\n<\/tt><span class=\"r\">const<\/span> <span class=\"pt\">double<\/span> PI = <span class=\"fl\">3<\/span><span class=\"fl\">.141592654<\/span>;<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h2>Defining the Complexn Class<\/h2>\n<p>For the <b>complexn<\/b> class we need 2 private variables <b><i>r<\/i><\/b> and <b><i>i<\/i><\/b>, 3 <b>constructors<\/b>, a <b>copy constructor<\/b>, 4 <b>member functions<\/b>, 9 <b>overloaded opperators<\/b>, and 2 <b>friend functions<\/b>.<\/p>\n<p>Like the previous program we will define everything with in the class and have the actual functions at the bottom.<\/p>\n<p>So here is what your class should look like (keep in mind that this all goes at the top <b>before the main function<\/b>):<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt>26<tt>\n<\/tt>27<tt>\n<\/tt>28<tt>\n<\/tt>29<tt>\n<\/tt><strong>30<\/strong><tt>\n<\/tt>31<tt>\n<\/tt>32<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>class complexn<tt>\n<\/tt>{<tt>\n<\/tt>  <span class=\"la\">private:<\/span><tt>\n<\/tt>    <span class=\"pt\">double<\/span> r; <span class=\"c\">\/\/ real part of the complex number<\/span><tt>\n<\/tt>    <span class=\"pt\">double<\/span> i; <span class=\"c\">\/\/ imaginary part of the complex number<\/span><tt>\n<\/tt>  <span class=\"la\">public:<\/span><tt>\n<\/tt>    complexn();<tt>\n<\/tt>    complexn(<span class=\"pt\">double<\/span> );<tt>\n<\/tt>    complexn(<span class=\"pt\">double<\/span> , <span class=\"pt\">double<\/span> );<tt>\n<\/tt>    complexn(<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt><tt>\n<\/tt>    <span class=\"pt\">double<\/span> complexabs();<tt>\n<\/tt>    <span class=\"pt\">double<\/span> complexangle();<tt>\n<\/tt>    complexn complexconj();<tt>\n<\/tt>    <span class=\"pt\">double<\/span> distance(<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt><tt>\n<\/tt>    complexn operator + (<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt>    complexn operator - (<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt>    complexn operator * (<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt>    complexn operator \/ (<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt>    complexn operator = (<span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt><tt>\n<\/tt>    complexn operator ++ ();<tt>\n<\/tt>    complexn operator ++ (<span class=\"pt\">int<\/span> );<tt>\n<\/tt>    complexn operator -- ();<tt>\n<\/tt>    complexn operator -- (<span class=\"pt\">int<\/span> );<tt>\n<\/tt><tt>\n<\/tt>    friend ostream &amp; operator &lt;&lt; (ostream &amp; , <span class=\"r\">const<\/span> complexn &amp; );<tt>\n<\/tt>    friend istream &amp; operator &gt;&gt; (istream &amp; , complexn &amp; );<tt>\n<\/tt>};<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h2>Writing the Actual Functions for the Complexn Class<\/h2>\n<p>First we have the 3 <b>constructors<\/b> and the <b>copy constructor<\/b>:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"c\">\/\/ takes no arguments and sets r and i to 0.0<\/span><tt>\n<\/tt>complexn::complexn()<tt>\n<\/tt>{<tt>\n<\/tt>  r = i = <span class=\"fl\">0<\/span><span class=\"fl\">.0<\/span>;<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ takes 1 argument and sets r to the argument and i to 0.0<\/span><tt>\n<\/tt>complexn::complexn(<span class=\"pt\">double<\/span> real)<tt>\n<\/tt>{<tt>\n<\/tt>  r = real;<tt>\n<\/tt>  i = <span class=\"fl\">0<\/span><span class=\"fl\">.0<\/span>;<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ takes 2 arguments and sets r to the first and i to the second<\/span><tt>\n<\/tt>complexn::complexn(<span class=\"pt\">double<\/span> real, <span class=\"pt\">double<\/span> imag)<tt>\n<\/tt>{<tt>\n<\/tt>  r = real;<tt>\n<\/tt>  i = imag;<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ this is a copy constructor that dereferences the complexn variable if it is referenced<\/span><tt>\n<\/tt>complexn::complexn(<span class=\"r\">const<\/span> complexn &amp;c)<tt>\n<\/tt>{<tt>\n<\/tt>  r = c.r;<tt>\n<\/tt>  i = c.i;<tt>\n<\/tt>}<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Next, we have the 3 <b>member functions<\/b>:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt>26<tt>\n<\/tt>27<tt>\n<\/tt>28<tt>\n<\/tt>29<tt>\n<\/tt><strong>30<\/strong><tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"c\">\/\/ takes no arguments and returns the distance from the 0 as a double<\/span><tt>\n<\/tt><span class=\"pt\">double<\/span> complexn::complexabs()<tt>\n<\/tt>{<tt>\n<\/tt>  <span class=\"r\">return<\/span> sqrt(pow(r,<span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>) + pow(i,<span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>));<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ takes no arguments and returns the angle of the complex point as a double in radians<\/span><tt>\n<\/tt><span class=\"pt\">double<\/span> complexn::complexangle()<tt>\n<\/tt>{<tt>\n<\/tt>  <span class=\"pt\">double<\/span> angle; <span class=\"c\">\/\/ angle of coordinate from positive x axis<\/span><tt>\n<\/tt>  angle = atan(r \/ i);<tt>\n<\/tt>  <span class=\"r\">if<\/span>(r &lt; <span class=\"i\">0<\/span> and i &gt;= <span class=\"i\">0<\/span>)<tt>\n<\/tt>    <span class=\"r\">return<\/span> PI - abs(angle);<tt>\n<\/tt>  <span class=\"r\">if<\/span>(r &lt; <span class=\"i\">0<\/span> and i &lt; <span class=\"i\">0<\/span>)<tt>\n<\/tt>    <span class=\"r\">return<\/span> -(PI - abs(angle));<tt>\n<\/tt>  <span class=\"r\">return<\/span> angle;<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ takes no arguments and returns the conjugate of the complex number as a complexn class<\/span><tt>\n<\/tt>complexn complexn::complexconj()<tt>\n<\/tt>{<tt>\n<\/tt>  complexn temp = *this; <span class=\"c\">\/\/ complex number used for calculations<\/span><tt>\n<\/tt>  temp.i *= -<span class=\"i\">1<\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> temp;<tt>\n<\/tt>}<tt>\n<\/tt><span class=\"c\">\/\/ takes one complexn type argument and returns the distance between the argument and the current instance<\/span><tt>\n<\/tt><span class=\"pt\">double<\/span> complexn::distance(<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  <span class=\"r\">return<\/span> sqrt(pow(temp.r -r, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>) + pow(temp.i - i, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>));<tt>\n<\/tt>}<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Next, we have the 9 <b>overloaded operators<\/b>:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt>26<tt>\n<\/tt>27<tt>\n<\/tt>28<tt>\n<\/tt>29<tt>\n<\/tt><strong>30<\/strong><tt>\n<\/tt>31<tt>\n<\/tt>32<tt>\n<\/tt>33<tt>\n<\/tt>34<tt>\n<\/tt><strong>35<\/strong><tt>\n<\/tt>36<tt>\n<\/tt>37<tt>\n<\/tt>38<tt>\n<\/tt>39<tt>\n<\/tt><strong>40<\/strong><tt>\n<\/tt>41<tt>\n<\/tt>42<tt>\n<\/tt>43<tt>\n<\/tt>44<tt>\n<\/tt><strong>45<\/strong><tt>\n<\/tt>46<tt>\n<\/tt>47<tt>\n<\/tt>48<tt>\n<\/tt>49<tt>\n<\/tt><strong>50<\/strong><tt>\n<\/tt>51<tt>\n<\/tt>52<tt>\n<\/tt>53<tt>\n<\/tt>54<tt>\n<\/tt><strong>55<\/strong><tt>\n<\/tt>56<tt>\n<\/tt>57<tt>\n<\/tt>58<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>complexn complexn::operator + (<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn cn; <span class=\"c\">\/\/ complex number used for calculations<\/span><tt>\n<\/tt>  cn.r = r + temp.r;<tt>\n<\/tt>  cn.i = i + temp.i;<tt>\n<\/tt>  <span class=\"r\">return<\/span> cn;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator - (<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn cn; <span class=\"c\">\/\/ complex number used for calculations<\/span><tt>\n<\/tt>  cn.r = r - temp.r;<tt>\n<\/tt>  cn.i = i - temp.i;<tt>\n<\/tt>  <span class=\"r\">return<\/span> cn;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator * (<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn cn; <span class=\"c\">\/\/ complex number used for calculations<\/span><tt>\n<\/tt>  cn.r = r * temp.r - i * temp.i;<tt>\n<\/tt>  cn.i = r * temp.i + i * temp.r;<tt>\n<\/tt>  <span class=\"r\">return<\/span> cn;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator \/ (<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn cn; <span class=\"c\">\/\/ complex number used for calculations<\/span><tt>\n<\/tt>  cn.r = (r * temp.r + i * temp.i) \/ (pow(temp.r, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>) + pow(temp.i, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>));<tt>\n<\/tt>  cn.i = (i * temp.r - r * temp.i) \/ (pow(temp.r, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>) + pow(temp.i, <span class=\"fl\">2<\/span><span class=\"fl\">.0<\/span>));<tt>\n<\/tt>  <span class=\"r\">return<\/span> cn;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator = (<span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  r = temp.r;<tt>\n<\/tt>  i = temp.i;<tt>\n<\/tt>  <span class=\"r\">return<\/span> *this;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator ++ ()<tt>\n<\/tt>{<tt>\n<\/tt>  r += <span class=\"i\">1<\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> *this;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator ++ (<span class=\"pt\">int<\/span> x)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn temp = *this;<tt>\n<\/tt>  r += <span class=\"i\">1<\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> temp;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator -- ()<tt>\n<\/tt>{<tt>\n<\/tt>  r -= <span class=\"i\">1<\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> *this;<tt>\n<\/tt>}<tt>\n<\/tt>complexn complexn::operator -- (<span class=\"pt\">int<\/span> x)<tt>\n<\/tt>{<tt>\n<\/tt>  complexn temp = *this;<tt>\n<\/tt>  r -= <span class=\"i\">1<\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> temp;<tt>\n<\/tt>}<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Last, we have the 2 <b>friend functions<\/b>:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>ostream &amp; operator &lt;&lt; (ostream &amp;os, <span class=\"r\">const<\/span> complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  os &lt;&lt; temp.r &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\"> + <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; temp.i &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">i<\/span><span class=\"dl\">&quot;<\/span><\/span>;<tt>\n<\/tt>  <span class=\"r\">return<\/span> os;<tt>\n<\/tt>}<tt>\n<\/tt>istream &amp; operator &gt;&gt; (istream &amp;is, complexn &amp;temp)<tt>\n<\/tt>{<tt>\n<\/tt>  is &gt;&gt; temp.r &gt;&gt; temp.i;<tt>\n<\/tt>  <span class=\"r\">return<\/span> is;<tt>\n<\/tt>}<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h2>Testing Your program<\/h2>\n<p>I wrote a fairly good program for testing this <b>complexn<\/b> class.<\/p>\n<p>To test your program copy your program to <b>[name].h<\/b> file and in the <b>main.cpp<\/b>  file change the header file at the top to match your file.<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt>26<tt>\n<\/tt>27<tt>\n<\/tt>28<tt>\n<\/tt>29<tt>\n<\/tt><strong>30<\/strong><tt>\n<\/tt>31<tt>\n<\/tt>32<tt>\n<\/tt>33<tt>\n<\/tt>34<tt>\n<\/tt><strong>35<\/strong><tt>\n<\/tt>36<tt>\n<\/tt>37<tt>\n<\/tt>38<tt>\n<\/tt>39<tt>\n<\/tt><strong>40<\/strong><tt>\n<\/tt>41<tt>\n<\/tt>42<tt>\n<\/tt>43<tt>\n<\/tt>44<tt>\n<\/tt><strong>45<\/strong><tt>\n<\/tt>46<tt>\n<\/tt>47<tt>\n<\/tt>48<tt>\n<\/tt>49<tt>\n<\/tt><strong>50<\/strong><tt>\n<\/tt>51<tt>\n<\/tt>52<tt>\n<\/tt>53<tt>\n<\/tt>54<tt>\n<\/tt><strong>55<\/strong><tt>\n<\/tt>56<tt>\n<\/tt>57<tt>\n<\/tt>58<tt>\n<\/tt>59<tt>\n<\/tt><strong>60<\/strong><tt>\n<\/tt>61<tt>\n<\/tt>62<tt>\n<\/tt>63<tt>\n<\/tt>64<tt>\n<\/tt><strong>65<\/strong><tt>\n<\/tt>66<tt>\n<\/tt>67<tt>\n<\/tt>68<tt>\n<\/tt>69<tt>\n<\/tt><strong>70<\/strong><tt>\n<\/tt>71<tt>\n<\/tt>72<tt>\n<\/tt>73<tt>\n<\/tt>74<tt>\n<\/tt><strong>75<\/strong><tt>\n<\/tt>76<tt>\n<\/tt>77<tt>\n<\/tt>78<tt>\n<\/tt>79<tt>\n<\/tt><strong>80<\/strong><tt>\n<\/tt>81<tt>\n<\/tt>82<tt>\n<\/tt>83<tt>\n<\/tt>84<tt>\n<\/tt><strong>85<\/strong><tt>\n<\/tt>86<tt>\n<\/tt>87<tt>\n<\/tt>88<tt>\n<\/tt>89<tt>\n<\/tt><strong>90<\/strong><tt>\n<\/tt>91<tt>\n<\/tt>92<tt>\n<\/tt>93<tt>\n<\/tt>94<tt>\n<\/tt><strong>95<\/strong><tt>\n<\/tt>96<tt>\n<\/tt>97<tt>\n<\/tt>98<tt>\n<\/tt>99<tt>\n<\/tt><strong>100<\/strong><tt>\n<\/tt>101<tt>\n<\/tt>102<tt>\n<\/tt>103<tt>\n<\/tt>104<tt>\n<\/tt><strong>105<\/strong><tt>\n<\/tt>106<tt>\n<\/tt>107<tt>\n<\/tt>108<tt>\n<\/tt>109<tt>\n<\/tt><strong>110<\/strong><tt>\n<\/tt>111<tt>\n<\/tt>112<tt>\n<\/tt>113<tt>\n<\/tt>114<tt>\n<\/tt><strong>115<\/strong><tt>\n<\/tt>116<tt>\n<\/tt>117<tt>\n<\/tt>118<tt>\n<\/tt>119<tt>\n<\/tt><strong>120<\/strong><tt>\n<\/tt>121<tt>\n<\/tt>122<tt>\n<\/tt>123<tt>\n<\/tt>124<tt>\n<\/tt><strong>125<\/strong><tt>\n<\/tt>126<tt>\n<\/tt>127<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"pp\">#include<\/span> <span class=\"ic\">&lt;iostream&gt;<\/span><tt>\n<\/tt><span class=\"pp\">#include<\/span> <span class=\"ic\">&quot;yourprogram.h&quot;<\/span> <span class=\"c\">\/\/ the name of your comlexn header file goes here<\/span><tt>\n<\/tt><tt>\n<\/tt>using namespace std;<tt>\n<\/tt><tt>\n<\/tt><span class=\"pt\">int<\/span> main()<tt>\n<\/tt>{<tt>\n<\/tt>  complexn c1;<tt>\n<\/tt>  complexn c2(<span class=\"i\">1<\/span>);<tt>\n<\/tt>  complexn c3(<span class=\"i\">3<\/span>, -<span class=\"i\">5<\/span>);<tt>\n<\/tt>  complexn c4, c5, c6;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Complex Numbers: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Enter values for C1: <\/span><span class=\"dl\">&quot;<\/span><\/span>;<tt>\n<\/tt>  cin &gt;&gt; c1;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  You enetered: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Enter values for C2: <\/span><span class=\"dl\">&quot;<\/span><\/span>;<tt>\n<\/tt>  cin &gt;&gt; c2;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  You enetered: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Enter values for C3: <\/span><span class=\"dl\">&quot;<\/span><\/span>;<tt>\n<\/tt>  cin &gt;&gt; c3;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  You enetered: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Distances from origin: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1.complexabs() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2.complexabs() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3.complexabs() &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Conjugates:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1.complexconj() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2.complexconj() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3.complexconj() &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Distances between:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) and C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1.distance(c2) &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) and C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1.distance(c3) &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) and C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2.distance(c3) &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Addition:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) + C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 + c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) + C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 + c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) + C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 + c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Subtraction:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) - C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 - c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) - C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 - c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) - C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 - c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Multiplication:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) * C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 * c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) * C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 * c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) * C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 * c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Division:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) \/ C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 \/ c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) \/ C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 \/ c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">) \/ C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 \/ c3 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Incrementing:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1++: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1++ &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  ++C1: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; ++c1 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2++: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2++ &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  ++C2: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; ++c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3++: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3++ &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  ++C3: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; ++c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Decrementing:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1--: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1-- &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  --C1: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; --c1 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2--: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2-- &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  --C2: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; --c2 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3--: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3-- &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  --C3: <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; --c3 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3 =  <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3   &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  c4 = c1;<tt>\n<\/tt>  c5 = c2;<tt>\n<\/tt>  c6 = c3;<tt>\n<\/tt><tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Equals:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C4 = C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c4 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C5 = C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c5 &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C6 = C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c6 &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  c1 = complexn ( <span class=\"i\">1<\/span>, <span class=\"i\">1<\/span>);<tt>\n<\/tt>  c2 = complexn (-<span class=\"i\">1<\/span>, <span class=\"i\">1<\/span>);<tt>\n<\/tt>  c3 = complexn (-<span class=\"i\">1<\/span>,-<span class=\"i\">1<\/span>);<tt>\n<\/tt>  c4 = complexn ( <span class=\"i\">1<\/span>,-<span class=\"i\">1<\/span>);<tt>\n<\/tt>  c5 = complexn ( <span class=\"i\">0<\/span>, <span class=\"i\">1<\/span>);<tt>\n<\/tt>  c6 = complexn (-<span class=\"i\">1<\/span>, <span class=\"i\">0<\/span>);<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"ch\">n<\/span><span class=\"k\">Angles:<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C1(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c1.complexangle() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C2(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c2.complexangle() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C3(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c3.complexangle() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C4(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c4 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c4.complexangle() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C5(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c5 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c5.complexangle() &lt;&lt; endl;<tt>\n<\/tt>  cout &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">  C6(<\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c6 &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">): <\/span><span class=\"dl\">&quot;<\/span><\/span> &lt;&lt; c6.complexangle() &lt;&lt; endl;<tt>\n<\/tt><tt>\n<\/tt>  <span class=\"r\">return<\/span> <span class=\"i\">0<\/span>;<tt>\n<\/tt>}<tt>\n<\/tt><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n","protected":false},"excerpt":{"rendered":"<p>This is a step-by-step tutorial for this assignment and an explanation of the basics of how it works for those that are having a difficult time understanding or just are stuck somewhere. To view the assignment click here. So for this assignment we are going to be doing a lot of math calculations so we [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[32,6,3,14,30],"tags":[33,34,35],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/52258"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=52258"}],"version-history":[{"count":2,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/52258\/revisions"}],"predecessor-version":[{"id":57503,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/52258\/revisions\/57503"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=52258"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=52258"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=52258"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}