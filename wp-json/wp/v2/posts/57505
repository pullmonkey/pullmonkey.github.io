{"id":57505,"date":"2010-01-18T17:06:00","date_gmt":"2010-01-18T17:06:00","guid":{"rendered":"http:\/\/pullmonkey.com\/?p=57505"},"modified":"2010-01-18T19:51:07","modified_gmt":"2010-01-18T19:51:07","slug":"ruby-pdf-reader-gem-tutorial","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2010\/01\/18\/ruby-pdf-reader-gem-tutorial\/","title":{"rendered":"Ruby PDF Reader Gem Tutorial"},"content":{"rendered":"<p>I've been doing a lot of work these days dealing with PDFs and for the most part I've been happy with using poppler-utils' pdftohtml.  And that is great if you don't care about positioning or formatting and just care about the content.  But for those of you who, like me, have run across the need to know text positioning, font size, indentation, coloring, etc., then we will have to use something more.<\/p>\n<p>I had given just about every other option a chance before I finally found <a href=\"http:\/\/github.com\/yob\/pdf-reader\">the pdf reader gem<\/a>.  But when I found pdf reader, it didn't have much documentation and it wasn't entirely clear how to get started using it and if it would work.  Well, I can tell you that it will work and after playing with the examples a lot of it became much clearer.  I learned a lot that would probably be useful for a few other people out there, hence this post.<br \/>\nOk, well to get started, take a look at the <a href=\"http:\/\/github.com\/yob\/pdf-reader\">github repository for pdf reader<\/a>.  You don't need to spend too much time, but just note a few places like <a href=\"http:\/\/github.com\/yob\/pdf-reader\/tree\/master\/examples\/\">the examples directory<\/a> and the <a href=\"http:\/\/github.com\/yob\/pdf-reader\/blob\/master\/lib\/pdf\/reader\/content.rb\">list of callbacks<\/a>.<\/p>\n<p>You should probably familiarize yourself with <a href=\"http:\/\/www.adobe.com\/devnet\/acrobat\/pdfs\/PDF32000_2008.pdf\">this PDF specification<\/a> too - found <a href=\"http:\/\/www.adobe.com\/devnet\/pdf\/pdf_reference.html\">here<\/a>.  It really came in handly when trying to figure out what arguments are being passed around what they represent.<\/p>\n<p>Let's get started -<\/p>\n<h3>Step 1:\u00a0 Install the gem<\/h3>\n<p>Yah, this is a pretty easy step, but it is required \ud83d\ude42<br \/>\nsudo gem install pdf-reader<\/p>\n<h3>Step 2:\u00a0 Find a PDF (or PDFs) to use<\/h3>\n<p>It would be best to have several PDFs for you to work with since the callbacks could vary depending on the PDF.<br \/>\nNOTE: For these examples, I'm using a really simple PDF, pdf reader could take a while on some PDFs and seem as though it is hanging but it is not, it is just chugging away right <a href=\"http:\/\/github.com\/yob\/pdf-reader\/blob\/43f328a41f42a365a3582fad7df7cae374ef1d96\/lib\/pdf\/reader\/buffer.rb\">around line 283 of this file<\/a>, reading each byte of your PDF.<\/p>\n<h3>Step 3: List the possible callbacks and their args for one of your PDFs<\/h3>\n<p>The point of this is to find out what methods we can write for pdf reader to call when it encounters the various parts of our PDF.<br \/>\nThe BIG One that you will most likely use is show_text() or some form of it like show_text_with_positioning().<br \/>\nBut, for now, THIS all depends on the PDF file you are using, so we need to find out what your PDF uses and go from there.<\/p>\n<p>The easiest way to do this is to follow <a href=\"http:\/\/github.com\/yob\/pdf-reader\/blob\/master\/examples\/callbacks.rb\">this example<\/a> and just substitute \"somefile.pdf\" with the path to your pdf file.<\/p>\n<p>Run it and you will see a long list of possible callbacks and their arguments.  It is likely all squished together, so you can simply change the line of your code that says <code>puts cb<\/code> to <code>puts cb.inspect<\/code> and get a MUCH better look at everything.<\/p>\n<p>We will start with show_text, so <code>grep<\/code> for show_text and see what you get.  For my PDF, I have mostly show_text_with_positioning.<\/p>\n<h3>Step 4: Do some lookups<\/h3>\n<p>What are the args they are showing me for my callbacks and how do we find out?<br \/>\nYou can do this two ways, try your luck at searching the pdf file for \"show text\" or \"show text with positioning\" and see what you get.  Or you can lookup the token used to represent show_text or show_text_with_positioning.<br \/>\nThe first way is pretty obvious, so on to the second - look in the <a href=\"http:\/\/github.com\/yob\/pdf-reader\/blob\/master\/lib\/pdf\/reader\/content.rb\">list of callbacks<\/a> I had your familiarize yourself with earlier, starting on line 172.  Looking through we can find show_text and show_text_with_positioning, having Tj and TJ as their operators.  Alright, now we have something to look up - \"TJ\".  Well, I found it on page 251 of the PDF Specification from earlier.  Some of descriptions for the operators will require rereading but you will get the hang of it.<\/p>\n<h3>Step 5: Use what we found<\/h3>\n<p>Now that we know how the show_text_with_positioning works and what args it brings in, we can write our code.<br \/>\nWe need an instance of a receiver to pass to the PDF Reader.  This is just a class that has methods likes show_text() of show_text_with_positioning().  Our receiver could look something like this:<\/p>\n<p><script src=\"http:\/\/gist.github.com\/280305.js?file=test_it_receiver.rb\"><\/script><\/p>\n<p>Now we just need to create our receiver instance an pass our PDF file to pdf reader:<br \/>\n<script src=\"http:\/\/gist.github.com\/280307.js?file=gistfile1.rb\"><\/script><\/p>\n<p>Don't forget to require the pdf reader at the top of your script like this:<br \/>\n<code>require 'rubygems'<br \/>\nrequire 'pdf\/reader'<\/code><\/p>\n<h3>Step 6: Check out the results<\/h3>\n<p>If we run our script, we will see all the text that uses Tj or TJ print out.<\/p>\n<p>This is just the beginning and you can pick and choose any of the callbacks from that list (list of operators) and implement just about anything.<\/p>\n<p>At the beginning of this post, I mentioned that I was concerned about positioning.  This means I had to get very familiar with the text matrix operator (Tm), found on page 250 of the specification.  It takes six arguments (a-f) all representing one thing or another and it is not very well documented.  From what I can gather, the first four (a through d) are for things like scale and rotation, the last two e and f are for position on the page, where e is along the x axis and f along the y axis.<\/p>\n<p>There is another text positioning operator that I saw quite often and that is move_text_position (Td operator, page 249 of the specification) that actually provides the x and y (unscaled) text space units coordinates.  So if y is -1, that just means go to the next line and if y is 0, stay on the same line, -2, move down two lines, 2, move up two lines, etc.  x is for indentation or horizontal spacing and represents the number of characters (spaces) to offset the text position by.<\/p>\n<p>I hope this helps and a huge thanks goes to <a href=\"http:\/\/github.com\/yob\">James Healy<\/a> for his grand work on <a href=\"http:\/\/github.com\/yob\/pdf-reader\">pdf reader<\/a>.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I&#8217;ve been doing a lot of work these days dealing with PDFs and for the most part I&#8217;ve been happy with using poppler-utils&#8217; pdftohtml. And that is great if you don&#8217;t care about positioning or formatting and just care about the content. But for those of you who, like me, have run across the need [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,5,9,30],"tags":[116,113,111,112,211,115,114,117],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57505"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=57505"}],"version-history":[{"count":9,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57505\/revisions"}],"predecessor-version":[{"id":57508,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57505\/revisions\/57508"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=57505"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=57505"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=57505"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}