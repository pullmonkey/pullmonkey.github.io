{"id":16,"date":"2007-05-03T01:34:00","date_gmt":"2007-05-03T01:34:00","guid":{"rendered":"\/2007\/09\/11\/converting-ruby-array-to-hash"},"modified":"2007-05-03T01:34:00","modified_gmt":"2007-05-03T01:34:00","slug":"converting-ruby-array-to-hash","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2007\/05\/03\/converting-ruby-array-to-hash\/","title":{"rendered":"Converting ruby Array to Hash"},"content":{"rendered":"<p>I ran across a situation that required the know-how of converting an array into a hash.<br \/>\nConverting a hash into an array (obvious):<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">  &gt;&gt; hash = {<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">a<\/span><span class=\"dl\">&quot;<\/span><\/span> =&gt; <span class=\"i\">1<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">b<\/span><span class=\"dl\">&quot;<\/span><\/span> =&gt; <span class=\"i\">2<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">c<\/span><span class=\"dl\">&quot;<\/span><\/span> =&gt; <span class=\"i\">3<\/span>}<tt>\n<\/tt>  =&gt; {<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">a<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">1<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">b<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">2<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">c<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">3<\/span>}<tt>\n<\/tt>  &gt;&gt; array = hash.to_a<tt>\n<\/tt>  =&gt; [[<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">a<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"i\">1<\/span>], [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">b<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"i\">2<\/span>], [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">c<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"i\">3<\/span>]]<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Now back to hash from an array, you could try array.to_h, or array.to_hash, but apparently not.<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">  &gt;&gt; hash2 = <span class=\"co\">Hash<\/span>[*array.flatten]<tt>\n<\/tt>  =&gt; {<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">a<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">1<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">b<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">2<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">c<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"i\">3<\/span>}<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>The <tt>*<\/tt> of <tt>*array<\/tt> converts <tt>array<\/tt> into an assignment list.<br \/>\nThe <tt>*<\/tt> opperator can also be used on the left side of the assignment:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\">  irb(main):<span class=\"i\">001<\/span>:<span class=\"i\">0<\/span>&gt; a = [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span>,<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span>,<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">3<\/span><span class=\"dl\">&quot;<\/span><\/span>,<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">4<\/span><span class=\"dl\">&quot;<\/span><\/span>]<tt>\n<\/tt>  =&gt; [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">3<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">4<\/span><span class=\"dl\">&quot;<\/span><\/span>]<tt>\n<\/tt>  irb(main):<span class=\"i\">002<\/span>:<span class=\"i\">0<\/span>&gt; b,c = a<tt>\n<\/tt>  =&gt; [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">3<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">4<\/span><span class=\"dl\">&quot;<\/span><\/span>]<tt>\n<\/tt>  irb(main):<span class=\"i\">003<\/span>:<span class=\"i\">0<\/span>&gt; b<tt>\n<\/tt>  =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>  irb(main):<span class=\"i\">004<\/span>:<span class=\"i\">0<\/span>&gt; c<tt>\n<\/tt>  =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>  irb(main):<span class=\"i\">00<\/span><span class=\"i\">8<\/span>:<span class=\"i\">0<\/span>&gt; b,*c = a<tt>\n<\/tt>  =&gt; [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">3<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">4<\/span><span class=\"dl\">&quot;<\/span><\/span>]<tt>\n<\/tt>  irb(main):<span class=\"i\">00<\/span><span class=\"i\">9<\/span>:<span class=\"i\">0<\/span>&gt; b<tt>\n<\/tt>  =&gt; <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">1<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>  irb(main):<span class=\"i\">010<\/span>:<span class=\"i\">0<\/span>&gt; c<tt>\n<\/tt>  =&gt; [<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">2<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">3<\/span><span class=\"dl\">&quot;<\/span><\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">4<\/span><span class=\"dl\">&quot;<\/span><\/span>]<\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Notice how using the <tt>*<\/tt> in front of <tt>c<\/tt> made it a list, in otherwords, <tt>c<\/tt> contains the remainder of elements in <tt>a<\/tt> after <tt>b<\/tt> got its assignment.<br \/>\nNeat, eh?<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I ran across a situation that required the know-how of converting an array into a hash. Converting a hash into an array (obvious): 1 2 3 4 &gt;&gt; hash = {&quot;a&quot; =&gt; 1, &quot;b&quot; =&gt; 2, &quot;c&quot; =&gt; 3} =&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot;=&gt;3} &gt;&gt; array = hash.to_a =&gt; [[&quot;a&quot;, 1], [&quot;b&quot;, 2], [&quot;c&quot;, 3]] Now [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,3,9],"tags":[],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/16"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=16"}],"version-history":[{"count":0,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/16\/revisions"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=16"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=16"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=16"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}