{"id":57712,"date":"2012-07-27T15:39:59","date_gmt":"2012-07-27T15:39:59","guid":{"rendered":"http:\/\/pullmonkey.com\/?p=57712"},"modified":"2012-07-27T15:39:59","modified_gmt":"2012-07-27T15:39:59","slug":"using-ruby-to-read-from-a-magtek-usb-card-reader","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2012\/07\/27\/using-ruby-to-read-from-a-magtek-usb-card-reader\/","title":{"rendered":"Using Ruby to read from a MagTek USB Card Reader"},"content":{"rendered":"<p>Been playing around with a lot of USB devices lately, to get them to play nicely with some of our touch screen Rails apps.<br \/>\nOne of the devices is a card reader - specifically a MagTek reader, and the same code works for the ELO reader.<\/p>\n<p>I've tried a billion different ways to ensure we're reading in all the data.  At first, I was just asking the usb stream to present me with a certain number of characters, b\/c that's how all the examples do it.<br \/>\nBut we're using a lot of different cards with the readers, so that didn't work too well.  So now I just read one character at a time until we find the new line.<br \/>\nHere's the code to find the device, open it, close it and read from it, all whilst finding and converting the data as required.<\/p>\n<p><script src=\"https:\/\/gist.github.com\/3188668.js?file=gistfile1.rb\"><\/script><\/p>\n<p>So using this code, we take the swiped data and send it to our server for storage.<\/p>\n<p><script src=\"https:\/\/gist.github.com\/3188719.js?file=gistfile1.rb\"><\/script><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Been playing around with a lot of USB devices lately, to get them to play nicely with some of our touch screen Rails apps. One of the devices is a card reader &#8211; specifically a MagTek reader, and the same code works for the ELO reader. I&#8217;ve tried a billion different ways to ensure we&#8217;re [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,149,14,9,30],"tags":[199,200,190,191,198,211,197],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57712"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=57712"}],"version-history":[{"count":2,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57712\/revisions"}],"predecessor-version":[{"id":57714,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57712\/revisions\/57714"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=57712"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=57712"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=57712"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}