{"id":57708,"date":"2012-07-26T16:57:56","date_gmt":"2012-07-26T16:57:56","guid":{"rendered":"http:\/\/pullmonkey.com\/?p=57708"},"modified":"2012-07-26T16:57:56","modified_gmt":"2012-07-26T16:57:56","slug":"signature-pad-in-linux","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2012\/07\/26\/signature-pad-in-linux\/","title":{"rendered":"Signature Pad in Linux"},"content":{"rendered":"<p>I'm using the topaz model T L462 HSB.  It's nice now that it works.  But what a PITA to get it going.  The biggest problem with the device is the documentation.  There is no low level documentation explaining the representation of the bytes coming in over usb. So you are stuck using their libraries which expose some poorly explained API.<\/p>\n<p>Anyway, like I said, great when it works.  So I'm working in linux which basically leaves me having to use java libs and a shared object file.<\/p>\n<p>Here's my code:<\/p>\n<p><script src=\"https:\/\/gist.github.com\/3183134.js?file=gistfile1.java\"><\/script><\/p>\n<p>It sits and waits until the sig pad gets some points on it.  Once we have points it waits for a lapse in time where there is no change in the number of points.<br \/>\nOnce we've decided that we have captured a signature, we store it to a file.<br \/>\nThen we shell out to a ruby script - <a href=\"http:\/\/pullmonkey.com\/2012\/07\/25\/using-httpi-with-curb-to-do-multipart-file-uploads-with-spnego\/\">see the httpi and curb article<\/a> - which is how I get the file to our rails server for display and verification from the user.<\/p>\n<p>Now, you'll need a few files.  Most of which can be found in <a href=\"http:\/\/www.topazsystems.com\/software\/download\/java\/sigplusjava2_60.zip\">the java zip download<\/a> from the vendor site.<br \/>\nFrom that zip, you should grab the following:<br \/>\nSigPlus2_60.jar<br \/>\nRXTXcomm.jar<br \/>\nlibSigUsb.so - if you need the 64 bit version, go here - <a href=\"http:\/\/http:\/\/www.topazsystems.com\/Software\/libSigUsb7242012.zip\">http:\/\/www.topazsystems.com\/Software\/libSigUsb7242012.zip<\/a><\/p>\n<p>Then I just used eclipse to set everything up and build.  Works well so far.<br \/>\nThe only thing you may need to change is the model (I have mine set to SignatureGem1X5) and com port (I have mine set to HID1).<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I&#8217;m using the topaz model T L462 HSB. It&#8217;s nice now that it works. But what a PITA to get it going. The biggest problem with the device is the documentation. There is no low level documentation explaining the representation of the bytes coming in over usb. So you are stuck using their libraries which [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,149,14,30],"tags":[196,177,195,194,197],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57708"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=57708"}],"version-history":[{"count":3,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57708\/revisions"}],"predecessor-version":[{"id":57711,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/57708\/revisions\/57711"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=57708"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=57708"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=57708"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}