{"id":36362,"date":"2008-04-02T18:26:00","date_gmt":"2008-04-02T18:26:00","guid":{"rendered":"\/2008\/04\/02\/ruby-include-versus-intersection"},"modified":"2009-08-30T04:45:35","modified_gmt":"2009-08-30T04:45:35","slug":"ruby-include-versus-intersection","status":"publish","type":"post","link":"http:\/\/pullmonkey.com\/2008\/04\/02\/ruby-include-versus-intersection\/","title":{"rendered":"Ruby &#8211; include? versus intersection"},"content":{"rendered":"<p>After my last article about <a href=\"http:\/\/pullmonkey.com\/2008\/3\/31\/intersection-of-array-of-arrays-in-ruby\">intersection and arrays<\/a>, I got to thinking how this could apply elsewhere.<br \/>\nI decided to see if I could write a faster include?() method for Array using the intersection operator.  So here is what I did:<\/p>\n<h3>1) Tested via irb (of course)<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>[pullmonkey]<span class=\"er\">$<\/span> irb<tt>\n<\/tt><span class=\"c\"># build the array for conceptual testing<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">003<\/span>:<span class=\"i\">0<\/span>&gt; a = [<span class=\"i\">1<\/span>,<span class=\"i\">2<\/span>,<span class=\"i\">3<\/span>]<tt>\n<\/tt>=&gt; [<span class=\"i\">1<\/span>, <span class=\"i\">2<\/span>, <span class=\"i\">3<\/span>]<tt>\n<\/tt><span class=\"c\"># see how include?() does it<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">004<\/span>:<span class=\"i\">0<\/span>&gt; a.include?(<span class=\"i\">2<\/span>)<tt>\n<\/tt>=&gt; <span class=\"pc\">true<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">005<\/span>:<span class=\"i\">0<\/span>&gt; a.include?(<span class=\"i\">4<\/span>)<tt>\n<\/tt>=&gt; <span class=\"pc\">false<\/span><tt>\n<\/tt><span class=\"c\"># see what could be done with intersect<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">006<\/span>:<span class=\"i\">0<\/span>&gt; a &amp; [<span class=\"i\">2<\/span>]<tt>\n<\/tt>=&gt; [<span class=\"i\">2<\/span>]<tt>\n<\/tt>irb(main):<span class=\"i\">007<\/span>:<span class=\"i\">0<\/span>&gt; (a &amp; [<span class=\"i\">2<\/span>]).empty?<tt>\n<\/tt>=&gt; <span class=\"pc\">false<\/span><tt>\n<\/tt><span class=\"c\"># this should return true, so negate it<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">00<\/span><span class=\"i\">8<\/span>:<span class=\"i\">0<\/span>&gt; !(a &amp; [<span class=\"i\">2<\/span>]).empty?<tt>\n<\/tt>=&gt; <span class=\"pc\">true<\/span><tt>\n<\/tt>irb(main):<span class=\"i\">00<\/span><span class=\"i\">9<\/span>:<span class=\"i\">0<\/span>&gt; !(a &amp; [<span class=\"i\">4<\/span>]).empty?<tt>\n<\/tt>=&gt; <span class=\"pc\">false<\/span><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>2) Extended the Array class with the faster_include?() method:<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"r\">class<\/span> <span class=\"cl\">Array<\/span><tt>\n<\/tt>  <span class=\"r\">def<\/span> <span class=\"fu\">faster_include?<\/span>(n)<tt>\n<\/tt>    !(<span class=\"pc\">self<\/span> &amp; [n]).empty?<tt>\n<\/tt>  <span class=\"r\">end<\/span><tt>\n<\/tt><span class=\"r\">end<\/span><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>3) Wrote a performance test comparing elapsed time for true and false results:<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"c\"># size of the array<\/span><tt>\n<\/tt>x = <span class=\"i\">4000000<\/span><tt>\n<\/tt><span class=\"c\"># build the array<\/span><tt>\n<\/tt>a = (<span class=\"i\">1<\/span>..x).to_a<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Finding <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>x\/<span class=\"i\">2<\/span><span class=\"dl\">}<\/span><\/span><span class=\"k\"> ...<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>t1 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns true: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>a.include?(x\/<span class=\"i\">2<\/span>)<span class=\"dl\">}<\/span><\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>t2 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns true: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>a.faster_include?(x\/<span class=\"i\">2<\/span>)<span class=\"dl\">}<\/span><\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>t3 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns false: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>a.include?(<span class=\"i\">-50<\/span>)<span class=\"dl\">}<\/span><\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>t4 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns false: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>a.faster_include?(<span class=\"i\">-50<\/span>)<span class=\"dl\">}<\/span><\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>t5 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning true: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>t2 - t1<span class=\"dl\">}<\/span><\/span><span class=\"k\">.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning true: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>t3 - t2<span class=\"dl\">}<\/span><\/span><span class=\"k\">.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning false: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>t4 - t3<span class=\"dl\">}<\/span><\/span><span class=\"k\">.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt>p <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning false: <\/span><span class=\"il\"><span class=\"dl\">#{<\/span>t5 - t4<span class=\"dl\">}<\/span><\/span><span class=\"k\">.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>4) Just to see if there was a difference I got results and here they are:<\/h3>\n<p>Attempt 1:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Finding 2000000 ...<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns true: true<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns true: true<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns false: false<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns false: false<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning true: 0.308243.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning true: 0.271465.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning false: 0.629375.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning false: 0.242673.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Attempt 2:<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Finding 2000000 ...<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns true: true<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns true: true<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">include?() - returns false: false<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">faster_include?() - returns false: false<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning true: 0.323652.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning true: 0.272212.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for include?() returning false: 0.594751.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">Elapsed time for faster_include?() returning false: 0.277882.<\/span><span class=\"dl\">&quot;<\/span><\/span><tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Note that faster_include?() is consistent in elapsed time for a result of true and a result of false.  However, include?() takes much longer in both attempts to return false than it does to return true, well actually about twice as long.  include?() goes through each element, and I am using the midway point of the array in all tests, so it makes sense that include?() would return true in half the time it would take to return false.  Very interesting, so now that I see performance improvement with faster_include?(), I need to do a wider spread of tests and for more attempts:<br \/>\n<\/p>\n<h3>5) Better testing:<\/h3>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt>7<tt>\n<\/tt>8<tt>\n<\/tt>9<tt>\n<\/tt><strong>10<\/strong><tt>\n<\/tt>11<tt>\n<\/tt>12<tt>\n<\/tt>13<tt>\n<\/tt>14<tt>\n<\/tt><strong>15<\/strong><tt>\n<\/tt>16<tt>\n<\/tt>17<tt>\n<\/tt>18<tt>\n<\/tt>19<tt>\n<\/tt><strong>20<\/strong><tt>\n<\/tt>21<tt>\n<\/tt>22<tt>\n<\/tt>23<tt>\n<\/tt>24<tt>\n<\/tt><strong>25<\/strong><tt>\n<\/tt>26<tt>\n<\/tt>27<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>results = {}<tt>\n<\/tt>n = <span class=\"i\">5<\/span><tt>\n<\/tt><span class=\"c\"># size of the array<\/span><tt>\n<\/tt>[<span class=\"i\">1<\/span>,<span class=\"i\">50<\/span>,<span class=\"i\">500<\/span>,<span class=\"i\">5000<\/span>,<span class=\"i\">5000000<\/span>].each <span class=\"r\">do<\/span> |x|<tt>\n<\/tt>  a = (<span class=\"i\">1<\/span>..x).to_a<tt>\n<\/tt>  n.times <span class=\"r\">do<\/span> |t|<tt>\n<\/tt>    <span class=\"c\"># build the array<\/span><tt>\n<\/tt>    t1 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>    a.include?(x\/<span class=\"i\">2<\/span>)<tt>\n<\/tt>    t2 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>    a.faster_include?(x\/<span class=\"i\">2<\/span>)<tt>\n<\/tt>    t3 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>    a.include?(<span class=\"i\">-50<\/span>)<tt>\n<\/tt>    t4 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>    a.faster_include?(<span class=\"i\">-50<\/span>)<tt>\n<\/tt>    t5 = <span class=\"co\">Time<\/span>.now<tt>\n<\/tt>    results[x]          ||= {}<tt>\n<\/tt>    results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>]  ||= []<tt>\n<\/tt>    results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>] ||= []<tt>\n<\/tt>    results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>]  &lt;&lt; (t2 - t1) - (t3 - t2)<tt>\n<\/tt>    results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>] &lt;&lt; (t4 - t3) - (t5 - t4)<tt>\n<\/tt>  <span class=\"r\">end<\/span><tt>\n<\/tt>  detailed_results = results<tt>\n<\/tt>  results[x] = {<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span> =&gt; detailed_results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>].sum \/ n, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span> =&gt; detailed_results[x][<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>].sum \/ n}<tt>\n<\/tt><span class=\"r\">end<\/span><tt>\n<\/tt>pp results<tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<h3>My new results:<\/h3>\n<p>The results are based on 5 attempts for each array for both true and false for a total of 50 attempts.<\/p>\n<table class=\"CodeRay\">\n<tr>\n<td class=\"line_numbers\" title=\"click to toggle\" onclick=\"with (this.firstChild.style) { display = (display == '') ? 'none' : '' }\">\n<pre>1<tt>\n<\/tt>2<tt>\n<\/tt>3<tt>\n<\/tt>4<tt>\n<\/tt><strong>5<\/strong><tt>\n<\/tt>6<tt>\n<\/tt><\/pre>\n<\/td>\n<td class=\"code\">\n<pre ondblclick=\"with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }\"><tt>\n<\/tt>{<span class=\"i\">5000000<\/span>=&gt;{<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">0.0921126<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">0.4374644<\/span>},<tt>\n<\/tt> <span class=\"i\">5000<\/span>=&gt;{<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">5.84e-05<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">0.0004404<\/span>},<tt>\n<\/tt> <span class=\"i\">500<\/span>=&gt;{<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">1.4e-06<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">4.16e-05<\/span>},<tt>\n<\/tt> <span class=\"i\">50<\/span>=&gt;{<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">-3.4e-06<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">1.0e-06<\/span>},<tt>\n<\/tt> <span class=\"i\">1<\/span>=&gt;{<span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">true<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">-4.8e-06<\/span>, <span class=\"s\"><span class=\"dl\">&quot;<\/span><span class=\"k\">false<\/span><span class=\"dl\">&quot;<\/span><\/span>=&gt;<span class=\"fl\">-3.8e-06<\/span>}}<tt>\n<\/tt><\/pre>\n<\/td>\n<\/tr>\n<\/table>\n<p>Note that arrays with 50 items or less seem to perform better using include?(), but barely.  On the other hand with an array of 5M items, you shave off half a second using faster_include?().<\/p>\n<p>So there you have it, faster_include?() can keep its name \ud83d\ude42<\/p>\n","protected":false},"excerpt":{"rendered":"<p>After my last article about intersection and arrays, I got to thinking how this could apply elsewhere. I decided to see if I could write a faster include?() method for Array using the intersection operator. So here is what I did: 1) Tested via irb (of course) 1 2 3 4 5 6 7 8 [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6,3,9],"tags":[211],"_links":{"self":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/36362"}],"collection":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/comments?post=36362"}],"version-history":[{"count":1,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/36362\/revisions"}],"predecessor-version":[{"id":57362,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/posts\/36362\/revisions\/57362"}],"wp:attachment":[{"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/media?parent=36362"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/categories?post=36362"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/pullmonkey.com\/wp-json\/wp\/v2\/tags?post=36362"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}