<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>PullMonkey Blog  &raquo; Blog Archive   &raquo; ECE231 &#8211; Spring 2009 &#8211; Programming Assignment 1</title>
<meta name="generator" content="WordPress 5.6" /> <!-- leave this for stats -->
<link rel="stylesheet" href="wp-content/themes/simple&#32;paper/style.css" type="text/css" media="screen" />
<link rel="stylesheet" href="wp-content/themes/simple&#32;paper/code_highlighter.css" type="text/css" media="screen" />
<link rel="alternate" type="application/rss+xml" title="PullMonkey Blog RSS Feed" href="feed/index.html" />
<link rel="pingback" href="http://pullmonkey.com/xmlrpc.php" />
<link rel='dns-prefetch' href='http://s.w.org/' />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/pullmonkey.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.6"}};
			!function(e,a,t){var r,n,o,i,p=a.createElement("canvas"),s=p.getContext&&p.getContext("2d");function c(e,t){var a=String.fromCharCode;s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,e),0,0);var r=p.toDataURL();return s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,t),0,0),r===p.toDataURL()}function l(e){if(!s||!s.fillText)return!1;switch(s.textBaseline="top",s.font="600 32px Arial",e){case"flag":return!c([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])&&(!c([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!c([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]));case"emoji":return!c([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}function d(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(i=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},o=0;o<i.length;o++)t.supports[i[o]]=l(i[o]),t.supports.everything=t.supports.everything&&t.supports[i[o]],"flag"!==i[o]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[i[o]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(r=t.source||{}).concatemoji?d(r.concatemoji):r.wpemoji&&r.twemoji&&(d(r.twemoji),d(r.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css'  href='wp-includes/css/dist/block-library/style.min.css?ver=5.6' type='text/css' media='all' />
<link rel="https://api.w.org/" href="wp-json/index.html" /><link rel="alternate" type="application/json" href="wp-json/wp/v2/posts/51727" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pullmonkey.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.6" />
<link rel="canonical" href="index.html?p=51727" />
<link rel='shortlink' href='index.html?p=51727' />
<link rel="alternate" type="application/json+oembed" href="wp-json/oembed/1.0/embed?url=http:%252F%252Fpullmonkey.com%252F2009%252F02%252F05%252Fece231-spring-2009-programming-assignment-1%252F" />
<link rel="alternate" type="text/xml+oembed" href="wp-json/oembed/1.0/embed?url=http:%252F%252Fpullmonkey.com%252F2009%252F02%252F05%252Fece231-spring-2009-programming-assignment-1%252F&amp;format=xml" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style></head>
<body>

<div id="container">

<div id="menu">

        <ul id="nav">
        <li class="current_page_item"><a href="index.html">Home</a></li>
                       	</ul>

</div><!-- Menu -->

<div id="wrapper">

<div id="c1">

<h1 id="logo"><a href="index.html">PullMonkey Blog</a></h1>
<h2 id="description"></h2>

<div id="content">


<div class="post" id="post-51727">

<div class="date">05 <span>Feb</span></div>

<h2><a href="index.html?p=51727" rel="bookmark" title="Permanent Link to ECE231 &#8211; Spring 2009 &#8211; Programming Assignment 1">ECE231 &#8211; Spring 2009 &#8211; Programming Assignment 1</a></h2><br clear="all" />

<p>This is a step-by-step tutorial for this assignment and an explanation of the basics of how it works for those that are having a difficult time understanding or just are stuck somewhere. To <a href="http://www.unm.edu/~speralta/progs/ece231assn1.htm" >view the assignment click here.</a></p>
<h1>Part A</h1>
<p><b>1. Create a structure (called point) that includes a time and y value (both doubles).</b></p>
<p>This is very simple using the <b>typedef struct</b> and listing your variables.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="r">typedef</span> <span class="r">struct</span><tt>
</tt>{<tt>
</tt>  <span class="pt">double</span> time;<tt>
</tt>  <span class="pt">double</span> y;<tt>
</tt>} point;<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p><b>2. Create a main program that has an array of 40 points (or structures), keeps track of the number of values in the array and has variables for each of the values needed to calculate above.</b></p>
<p>In the main program we will need an array of points <b><i>p</i></b>, an integer with the total number of points <b><i>values</i></b>, and 4 double variables, one for each of the functions (I used <b><i>vert_shift</i></b>, <b><i>amp</i></b>, <b><i>freq</i></b>, and <b><i>phase_shift</i></b>).</p>
<p>Then you will need to call each function and for testing I printed each value out to make sure everything was coming in right. It is short, simple, and to the point like all programming should be. Your main should look something like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt>8<tt>
</tt>9<tt>
</tt><strong>10</strong><tt>
</tt>11<tt>
</tt>12<tt>
</tt>13<tt>
</tt>14<tt>
</tt><strong>15</strong><tt>
</tt>16<tt>
</tt>17<tt>
</tt>18<tt>
</tt>19<tt>
</tt><strong>20</strong><tt>
</tt>21<tt>
</tt>22<tt>
</tt>23<tt>
</tt>24<tt>
</tt><strong>25</strong><tt>
</tt>26<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">int</span> main()<tt>
</tt>{<tt>
</tt>  point p[<span class="i">40</span>];          <span class="c">// array of points</span><tt>
</tt>  <span class="pt">int</span> values = <span class="i">0</span>;       <span class="c">// total number of values in the points array</span><tt>
</tt>  <span class="pt">double</span> vert_shift=<span class="i">0</span>;  <span class="c">// vertical shift</span><tt>
</tt>  <span class="pt">double</span> amp=<span class="i">0</span>;         <span class="c">// amplitude</span><tt>
</tt>  <span class="pt">double</span> freq=<span class="i">0</span>;        <span class="c">// frequency</span><tt>
</tt>  <span class="pt">double</span> phase_shift=<span class="i">0</span>; <span class="c">// phase shift</span><tt>
</tt><tt>
</tt>  values = read_data(p);<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="k">Values: </span><span class="dl">&quot;</span></span> &lt;&lt; endl;<tt>
</tt>  <span class="r">for</span>(lcv=<span class="i">0</span>; lcv &lt; values; lcv++)<tt>
</tt>    cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="k">  </span><span class="dl">&quot;</span></span> &lt;&lt;  p[lcv].time &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="k">  </span><span class="dl">&quot;</span></span> &lt;&lt; p[lcv].y &lt;&lt; endl;<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="ch">n</span><span class="k">Total Number of values = </span><span class="dl">&quot;</span></span> &lt;&lt; values &lt;&lt; endl;<tt>
</tt>  vert_shift = vertical(p, values);<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="ch">n</span><span class="k">Vertical shift = </span><span class="dl">&quot;</span></span> &lt;&lt; vert_shift &lt;&lt; endl;<tt>
</tt>  amp = amplitude(p, values);<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="ch">n</span><span class="k">Amplitude = </span><span class="dl">&quot;</span></span> &lt;&lt; amp &lt;&lt; endl;<tt>
</tt>  freq = frequency(p, values);<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="ch">n</span><span class="k">Frequency = </span><span class="dl">&quot;</span></span> &lt;&lt; freq &lt;&lt; endl;<tt>
</tt>  phase_shift = pshift(p, values);<tt>
</tt>  cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="ch">n</span><span class="k">Phase Shift = </span><span class="dl">&quot;</span></span> &lt;&lt; phase_shift &lt;&lt; endl;<tt>
</tt>  <span class="r">return</span> <span class="i">0</span>;<tt>
</tt>}<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p><b>3. The main program should then call the read_data function.  This function will have one argument (the array of points - or structures - which will be passed as a pointer to the function) and will return the number of values in the array.  It should read the data from the data file using a pointer and the arrow (->) operator.</b></p>
<p>First, we are going to be reading from a file in this function so we are going to need to include the <b>fstream</b> library.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pp">#inlcude</span> &lt;fstream&gt; <span class="c">// reading from file</span><tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Next, we need to create the prototype for this function called <b>read_data</b>. This will go above the main. The <b>read_data</b> function will need the array of points and will return the total number of points as an integer. So it should look like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">int</span> read_data(point *);<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Now below the main we can create our function and lets call the array of points <b><i>a</i></b>. In this function we will need 2 more variables, an integer (<b><i>total</i></b>) for counting the number of points that we read from the file and an ifstream variable (<b><i>f</i></b>) for opening and closing the file.</p>
<p>First, we need to try to open the file using <b>f.open("sp09prog1.txt")</b>. Next, we need to test to make sure the file was opened and that we can read from it and if not then print out error message and exit. If the file was opened then we need to read in the values into the point array and count the number of points using the <b><i>total</i></b> integer variable. We do this until we read the end of the file and we find out if we are at the end of the file with <b>f.eof()</b>. Finally, we will want to return the <b><i>total</i></b>. It should look like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt>8<tt>
</tt>9<tt>
</tt><strong>10</strong><tt>
</tt>11<tt>
</tt>12<tt>
</tt>13<tt>
</tt>14<tt>
</tt><strong>15</strong><tt>
</tt>16<tt>
</tt>17<tt>
</tt>18<tt>
</tt>19<tt>
</tt><strong>20</strong><tt>
</tt>21<tt>
</tt>22<tt>
</tt>23<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">int</span> read_data(point *a)<tt>
</tt>{<tt>
</tt>  ifstream f;  <span class="c">// file streaming variable</span><tt>
</tt>  <span class="pt">int</span> total=<span class="i">0</span>; <span class="c">// counts the total number of points in file</span><tt>
</tt><tt>
</tt>  f.open(<span class="s"><span class="dl">&quot;</span><span class="k">sp09prog1.txt</span><span class="dl">&quot;</span></span>);<tt>
</tt><tt>
</tt>  <span class="r">if</span>(f.fail())<tt>
</tt>  {<tt>
</tt>    cout &lt;&lt; <span class="s"><span class="dl">&quot;</span><span class="k">ERROR: File could not be opened</span><span class="dl">&quot;</span></span> &lt;&lt; endl;<tt>
</tt>    exit(<span class="i">1</span>);<tt>
</tt>  }<tt>
</tt><tt>
</tt>  <span class="r">while</span>(!f.eof())<tt>
</tt>  {<tt>
</tt>    f &gt;&gt; a-&gt;time &gt;&gt; a-&gt;y;<tt>
</tt>    total++;<tt>
</tt>    a++;<tt>
</tt>  }<tt>
</tt>  <span class="r">return</span> total - <span class="i">1</span>;<tt>
</tt>}<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Notice that we return <b>total - 1</b>. This is because we increment <b><i>total</i></b> and then we find out it is the end of the file. So we incremented one too many times so we need to subtract 1 before returning it.</p>
<p><b>4. Main should then call the vertical function to calculate the vertical shift.  This function has two arguments (the array of points - passed as a pointer - and the number of values in the array).  It will calculate the vertical shift by finding the average of the maximum and minimum y-values.  You will need to search through the array of points to find these max and min values.</b><br />
<b>5. Next, main will call the amplitude function to calculate the amplitude.  This function has two arguments (the array of points - passed as a pointer - and the number of values in the array; you must also use the arrow operator in this function) and will return the amplitude.  To find the amplitude, you need to calculate half the difference between the maximum and minimum values of the y-values (you will need to search through the array for the maximum and minimum values again).</b></p>
<p>The functions are both almost identical. The only difference is the equation at the end so we will do them at the same time.</p>
<p>First, we will create the prototypes. Both functions take the array of points and the integer total number of points and they both return a double. So the prototypes should look like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">double</span> vertical(point *, <span class="pt">int</span> );<tt>
</tt><span class="pt">double</span> amplitude(point *, <span class="pt">int</span> );<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>So lets call the point array <b><i>p</i></b> and the integer <b><i>total</i></b>.</p>
<p>To find the max and min values we need to create 2 double variables (<b><i>max</i></b> and <b><i>min</i></b>) and an integer (<b><i>lcv</i></b>) that we will use for the loop.</p>
<p>Next we will need to set both <b><i>max</i></b> and <b><i>min</i></b> to the first <b><i>y</i></b> element in the array of points. Then we will have a loop and start from 0 to <b><i>total</i></b>. Each time we run through this loop we need to do 3 things:</p>
<ul>
<li>1. Test if <b><i>max</i></b> is less than the current <b><i>y</i></b> value? If yes then set <b><i>max</i></b> to the current <b><i>y</i></b></li>
<li>2. Test if <b><i>min</i></b> is greater than the current <b><i>y</i></b> value? If yes then set <b><i>min</i></b> to the current <b><i>y</i></b></li>
<li>3. Increment <b><i>a</i></b> to the next position in the array. Because we are using a pointer to the array we can do this easily by doing <b>a++</b></li>
</ul>
<p>Next we will just return the result of the equation as a double. So your functions should look something like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt>8<tt>
</tt>9<tt>
</tt><strong>10</strong><tt>
</tt>11<tt>
</tt>12<tt>
</tt>13<tt>
</tt>14<tt>
</tt><strong>15</strong><tt>
</tt>16<tt>
</tt>17<tt>
</tt>18<tt>
</tt>19<tt>
</tt><strong>20</strong><tt>
</tt>21<tt>
</tt>22<tt>
</tt>23<tt>
</tt>24<tt>
</tt><strong>25</strong><tt>
</tt>26<tt>
</tt>27<tt>
</tt>28<tt>
</tt>29<tt>
</tt><strong>30</strong><tt>
</tt>31<tt>
</tt>32<tt>
</tt>33<tt>
</tt>34<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">double</span> vertical(point *a, <span class="pt">int</span> total)<tt>
</tt>{   <tt>
</tt>  <span class="pt">double</span> min; <span class="c">// minimum y value found in array</span><tt>
</tt>  <span class="pt">double</span> max; <span class="c">// maximum y value found in array</span><tt>
</tt>  <span class="pt">int</span> lcv;    <span class="c">// loop control variable</span><tt>
</tt>  max = min = a-&gt;y;<tt>
</tt>  <span class="r">for</span>(lcv=<span class="i">0</span>; lcv &lt; total; lcv++) <tt>
</tt>  {<tt>
</tt>    <span class="r">if</span>(max &lt; a-&gt;y)<tt>
</tt>      max = a-&gt;y;<tt>
</tt>    <span class="r">if</span>(min &gt; a-&gt;y)<tt>
</tt>      min = a-&gt;y;<tt>
</tt>    a++;<tt>
</tt>  }<tt>
</tt>  <span class="r">return</span> (max + min) / <span class="fl">2</span><span class="fl">.0</span>;<tt>
</tt>}<tt>
</tt><span class="pt">double</span> amplitude(point *a, <span class="pt">int</span> total)<tt>
</tt>{<tt>
</tt>  <span class="pt">double</span> min; <span class="c">// minimum y value found in array</span><tt>
</tt>  <span class="pt">double</span> max; <span class="c">// maximum y value found in array</span><tt>
</tt>  <span class="pt">int</span> lcv;    <span class="c">// loop control variable</span><tt>
</tt>  max = min = a-&gt;y;<tt>
</tt>  <span class="r">for</span>(lcv=<span class="i">0</span>; lcv &lt; total; lcv++)<tt>
</tt>  {<tt>
</tt>    <span class="r">if</span>(max &lt; a-&gt;y)<tt>
</tt>      max = a-&gt;y;<tt>
</tt>    <span class="r">if</span>(min &gt; a-&gt;y)<tt>
</tt>      min = a-&gt;y;<tt>
</tt>    a++;<tt>
</tt>  }<tt>
</tt>  <span class="r">return</span> (max - min) / <span class="fl">2</span><span class="fl">.0</span>;<tt>
</tt>}<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p><b>6. The next function called by main is the frequency function that has two arguments (the array of points - passed as a pointer - and the number of values in the array; again using the arrow operator to access values) and will return the frequency.  To calculate the frequency, find the period which is time difference between the maximum and minimum y-values and multiply by 2.  Then, divide to calculate the frequency.  Please note that you are using the difference between time values, not the y values, to perform the overall computation.</b><br />
<b>7. Finally, main will call the pshift function that contains two arguments (the array of points - passed as a pointer - and the number of values in the array; again using the arrow operator to access values) and will return the phase shift or horizontal shift.  This shift can be found by finding the average of the time values where the maximum and minimum y-values occur; then subtracting it from half the period (see step 6 to find the period).</b></p>
<p>The functions for steps 6 and 7 are both almost identical expect for the equation at the end so we will do these both at the same time.</p>
<p>For the frequency function we will need to use the absolute value function in the cmath library. To include this you will need to do this at the top of your file.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pp">#include</span> <span class="ic">&lt;cmath&gt;</span><tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Like the functions in step 4 and 5 they need to have the array of points and the integer total number of points and they both return a double. So the prototypes should look like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">double</span> frequency(point *, <span class="pt">int</span> );<tt>
</tt><span class="pt">double</span> pshift(point *, <span class="pt">int</span> );<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>So lets call the point array <b><i>p</i></b> and the integer <b><i>total</i></b>.</p>
<p>To find the max and min values we need to create 2 pointers to point variables (<b><i>max</i></b> and <b><i>min</i></b>) and an integer (<b><i>lcv</i></b>) that we will use for the loop.</p>
<p>Next we will need to set both <b><i>max</i></b> and <b><i>min</i></b> pointers to the same address as <b><i>a</i></b> points which is the first position in the array of points. Then we will have a loop and start from 0 to <b><i>total</i></b>. Each time we run through this loop we need to do 3 things:</p>
<ul>
<li>1. Test if <b><i>max->y</i></b> is less than the current <b><i>a->y</i></b> value? If yes then set <b><i>max</i></b> to the current <b><i>a</i></b> address.</li>
<li>2. Test if <b><i>min->y</i></b> is greater than the current <b><i>a->y</i></b> value? If yes then set <b><i>min</i></b> to the current <b><i>a</i></b> address.</li>
<li>3. Increment <b><i>a</i></b> to the next position in the array. Because we are using a pointer to the array we can do this easily by doing <b>a++</b></li>
</ul>
<p>Next we will just return the result of the equation as a double. So your functions should look something like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt>8<tt>
</tt>9<tt>
</tt><strong>10</strong><tt>
</tt>11<tt>
</tt>12<tt>
</tt>13<tt>
</tt>14<tt>
</tt><strong>15</strong><tt>
</tt>16<tt>
</tt>17<tt>
</tt>18<tt>
</tt>19<tt>
</tt><strong>20</strong><tt>
</tt>21<tt>
</tt>22<tt>
</tt>23<tt>
</tt>24<tt>
</tt><strong>25</strong><tt>
</tt>26<tt>
</tt>27<tt>
</tt>28<tt>
</tt>29<tt>
</tt><strong>30</strong><tt>
</tt>31<tt>
</tt>32<tt>
</tt>33<tt>
</tt>34<tt>
</tt><strong>35</strong><tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pt">double</span> frequency(point *a, <span class="pt">int</span> total)<tt>
</tt>{<tt>
</tt>  point *min; <span class="c">// minimum y value location found in array</span><tt>
</tt>  point *max; <span class="c">// maximum y value location found in array</span><tt>
</tt>  <span class="pt">int</span> lcv;    <span class="c">// loop control variable</span><tt>
</tt>  max = min = a;<tt>
</tt>  <span class="r">for</span>(lcv=<span class="i">0</span>; lcv &lt; total; lcv++)<tt>
</tt>  {<tt>
</tt>    <span class="r">if</span>(max-&gt;y &lt; a-&gt;y)<tt>
</tt>      max = a;<tt>
</tt>    <span class="r">if</span>(min-&gt;y &gt; a-&gt;y)<tt>
</tt>      min = a;<tt>
</tt>    a++;<tt>
</tt>  } <tt>
</tt>  <span class="r">return</span> abs(PI / (max-&gt;time - min-&gt;time));<tt>
</tt>} <tt>
</tt><span class="pt">double</span> pshift(point *a, <span class="pt">int</span> total)<tt>
</tt>{<tt>
</tt>  point *min; <span class="c">// minimum y value location found in array</span><tt>
</tt>  point *max; <span class="c">// maximum y value location found in array</span><tt>
</tt>  <span class="pt">int</span> lcv;    <span class="c">// loop control variable</span><tt>
</tt>  max = min = a;<tt>
</tt>  <span class="r">for</span>(lcv=<span class="i">0</span>; lcv &lt; total; lcv++)<tt>
</tt>  {<tt>
</tt>    <span class="r">if</span>(max-&gt;y &lt; a-&gt;y)<tt>
</tt>      max = a;<tt>
</tt>    <span class="r">if</span>(min-&gt;y &gt; a-&gt;y)<tt>
</tt>      min = a;<tt>
</tt>    a++;<tt>
</tt>  }<tt>
</tt>  a -= total;<tt>
</tt>  <span class="r">return</span> (<span class="i">2</span> * PI / frequency(a, total)) / <span class="i">2</span> - (max-&gt;time + min-&gt;time) / <span class="fl">2</span><span class="fl">.0</span>;<tt>
</tt>}<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Notice how in the pshift function after the loop we do <b>a -= total</b>. This is because <b><i>a</i></b> is currently pointing the last element in the array and if we want to call frequency and pass the address of the first element in the array of points then we need to set <b><i>a</i></b> back to the first element.</p>
<p>Also notice that the frequency function uses a variable called <b><i>PI</i></b>. This is the value of pi so at the top above the main you will need to define it as a constant. You can do this one of 2 ways: </p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt><span class="pp">#define</span> PI <span class="fl">3</span><span class="fl">.14159</span><tt>
</tt>or <tt>
</tt><span class="r">const</span> <span class="pt">double</span> PI=<span class="fl">3</span><span class="fl">.14159</span>;<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Either way will work but I prefer to use the <b>#define</b> since it uses less memory and only takes more processing when you compile the program not in running it.</p>
<h2>Outcome</h2>
<p>Using the text file provided this is what I got when I ran the program:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt>8<tt>
</tt>9<tt>
</tt><strong>10</strong><tt>
</tt>11<tt>
</tt>12<tt>
</tt>13<tt>
</tt>14<tt>
</tt><strong>15</strong><tt>
</tt>16<tt>
</tt>17<tt>
</tt>18<tt>
</tt>19<tt>
</tt><strong>20</strong><tt>
</tt>21<tt>
</tt>22<tt>
</tt>23<tt>
</tt>24<tt>
</tt><strong>25</strong><tt>
</tt>26<tt>
</tt>27<tt>
</tt>28<tt>
</tt>29<tt>
</tt><strong>30</strong><tt>
</tt>31<tt>
</tt>32<tt>
</tt>33<tt>
</tt>34<tt>
</tt><strong>35</strong><tt>
</tt>36<tt>
</tt>37<tt>
</tt>38<tt>
</tt>39<tt>
</tt><strong>40</strong><tt>
</tt>41<tt>
</tt>42<tt>
</tt>43<tt>
</tt>44<tt>
</tt><strong>45</strong><tt>
</tt>46<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>[scnaegle<span class="er">@</span>egor ece231]<span class="er">$</span> ./a.out <tt>
</tt><span class="la">Values:</span> <tt>
</tt>  <span class="fl">1</span><span class="fl">.5708</span>  -<span class="i">4</span><tt>
</tt>  <span class="fl">1</span><span class="fl">.6791</span>  -<span class="fl">3</span><span class="fl">.3551</span><tt>
</tt>  <span class="fl">1</span><span class="fl">.7875</span>  -<span class="fl">2</span><span class="fl">.7403</span><tt>
</tt>  <span class="fl">1</span><span class="fl">.8958</span>  -<span class="fl">2</span><span class="fl">.1845</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.0041</span>  -<span class="fl">1</span><span class="fl">.7135</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.1125</span>  -<span class="fl">1</span><span class="fl">.3495</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.2208</span>  -<span class="fl">1</span><span class="fl">.1094</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.3291</span>  -<span class="fl">1</span><span class="fl">.0044</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.4374</span>  -<span class="fl">1</span><span class="fl">.0395</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.5458</span>  -<span class="fl">1</span><span class="fl">.2131</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.6541</span>  -<span class="fl">1</span><span class="fl">.5169</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.7624</span>  -<span class="fl">1</span><span class="fl">.9369</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.8708</span>  -<span class="fl">2</span><span class="fl">.4533</span><tt>
</tt>  <span class="fl">2</span><span class="fl">.9791</span>  -<span class="fl">3</span><span class="fl">.0421</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.0874</span>  -<span class="fl">3</span><span class="fl">.6756</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.1958</span>  -<span class="fl">4</span><span class="fl">.3244</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.3041</span>  -<span class="fl">4</span><span class="fl">.9579</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.4124</span>  -<span class="fl">5</span><span class="fl">.5467</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.5208</span>  -<span class="fl">6</span><span class="fl">.0631</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.6291</span>  -<span class="fl">6</span><span class="fl">.4831</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.7374</span>  -<span class="fl">6</span><span class="fl">.7869</span><tt>
</tt><tt>
</tt><tt>
</tt>  <span class="fl">3</span><span class="fl">.8457</span>  -<span class="fl">6</span><span class="fl">.9605</span><tt>
</tt>  <span class="fl">3</span><span class="fl">.9541</span>  -<span class="fl">6</span><span class="fl">.9956</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.0624</span>  -<span class="fl">6</span><span class="fl">.8906</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.1707</span>  -<span class="fl">6</span><span class="fl">.6505</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.2791</span>  -<span class="fl">6</span><span class="fl">.2865</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.3874</span>  -<span class="fl">5</span><span class="fl">.8155</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.4957</span>  -<span class="fl">5</span><span class="fl">.2597</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.6041</span>  -<span class="fl">4</span><span class="fl">.6449</span><tt>
</tt>  <span class="fl">4</span><span class="fl">.7124</span>  -<span class="i">4</span><tt>
</tt><tt>
</tt>Total Number of values = <span class="i">30</span><tt>
</tt><tt>
</tt>Vertical shift = -<span class="i">4</span><tt>
</tt><tt>
</tt>Amplitude = <span class="fl">2</span><span class="fl">.9956</span><tt>
</tt><tt>
</tt>Frequency = <span class="fl">1</span><span class="fl">.93329</span><tt>
</tt><tt>
</tt>Phase Shift = -<span class="fl">1</span><span class="fl">.5166</span><tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p></p>
<h1>Part B</h1>
<p><b>Using MATLAB, you need to plot the original data using the data file sp09prog1.txt.  To do this, load the file into MATLAB, then assign the first column to be the x values and the second column to be the y values.  You can then use the plot command to plot these (you should only plot the points - not any connecting lines).</b></p>
<p>This is easy. Use the <b>load()</b> function to read in data from the file into a matrix.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>table = load('sp09prog1.txt')<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Then we need to get the data into arrays of <b><i>time</i></b> and <b><i>y</i></b>. To do this use <b><i>matrixvairable</i>(<i>row</i>,<i>column</i>)</b>. Use a colon (<b>:</b>) to get everything in either the row or column. In this case we will want all rows in the first column for <b><i>time</i></b> and all rows and second column for <b><i>y</i></b>.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>time = table(: , 1)<tt>
</tt>y = table(: , 2)<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Then plot the data using the <b>plot()</b> function. For this you will need to pass 3 things (x values, y values, and symbol). Our x values is the array <b><i>time</i></b> and our y values is array <b><i>y</i></b>.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>plot(time, y, 'o')<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p><b>Then, using the values you found in the C++ program for each of the four variables, create a cosine curve that can be plotted over the data.  You will need to create a matrix of x-values that run from 1 to 2π with an increment of π/100.  Then, create a matrix of y values using the cosine equation:  where vs is the vertical shift, ps is the phase shift, amp is the amplitude and freq is the frequency.  Plot these x and y values using a red line.</b></p>
<p>This is just the same as the first part only we need to find the <b><i>x</i></b> and <b><i>y</i></b> values using equations. But first lets set all the values we will need for our calculations which we can get from <b>Part A</b> of the program.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt><strong>5</strong><tt>
</tt>6<tt>
</tt>7<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>vs = -4<tt>
</tt>amp = 2.9956<tt>
</tt>freq = 1.93329<tt>
</tt>ps = -1.5166<tt>
</tt>PI = 3.14159<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Next we will have to create the array <b><i>x</i></b> with all the x values. In this case we are going to go from 0 to 2pi and step by pi/100. To do this we have a colon (<b>:</b>) between each argument like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>x = 0 : PI / 100 : 2 * PI<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Now, to create the array <b><i>y</i></b> with all the y values we use the equation we were given.</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>y = vs + amp * (cos(freq * x - ps))<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Now, all we need to do is plot it on the graph. However, we want to plot the new equation on the same plot as the last one. To do this we need to use the command <b>hold on</b>. We also want the new graph to look different so lets make it a full line 4px wide and the color be dark red. Like this:</p>
<table class="CodeRay">
<tr>
<td class="line_numbers" title="click to toggle" onclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }">
<pre>1<tt>
</tt>2<tt>
</tt>3<tt>
</tt>4<tt>
</tt></pre>
</td>
<td class="code">
<pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><tt>
</tt>hold on<tt>
</tt>plot(x, y, '', 'LineWidth', 4, 'Color', [.6 0 0])<tt>
</tt><tt>
</tt></pre>
</td>
</tr>
</table>
<p>Now run it and see if your two line match up at all.</p>

<br />

<div class="meta">
<span class="note">Filed under: <a href="category/c-c/index.html" rel="category tag">C / C++</a>, <a href="category/development/index.html" rel="category tag">development</a>, <a href="category/home/index.html" rel="category tag">Home</a>, <a href="category/projects/index.html" rel="category tag">projects</a>, <a href="category/tutorials/index.html" rel="category tag">tutorials</a></span>
<span class="tags">Tags: <a href="tag/c/index.html" rel="tag">c++</a>, <a href="tag/ece231/index.html" rel="tag">ece231</a></span><br /></div><!--Meta -->


<!-- You can start editing here. -->

<div id="commentsbox">



	<p id="comments-closed">Sorry, comments for this entry are closed at this time.</p>
</div>
</div><!-- Post -->

		        
  

	
</div><!-- Content -->

</div><!-- LeftColumn -->

<div id="c2">

   
    <div id="sidebar">

<div id="subscribe">
<a href="feed/index.html"><img src="wp-content/themes/simple&#32;paper/images/rss.gif" alt="RSS-FEED" border="0" id="rss" /></a>
<a href="feed/index.html">subscribe to the feed</a><br clear="all" />
</div><!-- subscribe rss -->

<div id="topsearch">
<form action="index.html" method="post">
<input type="text" value="Search..." name="s" id="ls" class="searchfield" onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}" />
<input type="image" src="wp-content/themes/simple&#32;paper/images/click.gif" id="submit" />
</form>
<br clear="all" />
<br clear="all" />
</div>
    
    	<ul>
	<li id="tag_cloud-2" class="widget widget_tag_cloud"><h2 class="widgettitle">Tags</h2>
<div class="tagcloud"><a href="tag/net/index.html" class="tag-cloud-link tag-link-166 tag-link-position-1" style="font-size: 8pt;" aria-label=".net (2 items)">.net</a>
<a href="tag/activerecord/index.html" class="tag-cloud-link tag-link-54 tag-link-position-2" style="font-size: 8pt;" aria-label="activerecord (2 items)">activerecord</a>
<a href="tag/api/index.html" class="tag-cloud-link tag-link-220 tag-link-position-3" style="font-size: 10.40625pt;" aria-label="api (4 items)">api</a>
<a href="tag/biking/index.html" class="tag-cloud-link tag-link-219 tag-link-position-4" style="font-size: 10.40625pt;" aria-label="biking (4 items)">biking</a>
<a href="tag/business/index.html" class="tag-cloud-link tag-link-213 tag-link-position-5" style="font-size: 8pt;" aria-label="business (2 items)">business</a>
<a href="tag/c/index.html" class="tag-cloud-link tag-link-33 tag-link-position-6" style="font-size: 10.40625pt;" aria-label="c++ (4 items)">c++</a>
<a href="tag/charts/index.html" class="tag-cloud-link tag-link-42 tag-link-position-7" style="font-size: 18.171875pt;" aria-label="charts (25 items)">charts</a>
<a href="tag/cms/index.html" class="tag-cloud-link tag-link-60 tag-link-position-8" style="font-size: 12.046875pt;" aria-label="CMS (6 items)">CMS</a>
<a href="tag/curb/index.html" class="tag-cloud-link tag-link-190 tag-link-position-9" style="font-size: 8pt;" aria-label="curb (2 items)">curb</a>
<a href="tag/curl/index.html" class="tag-cloud-link tag-link-120 tag-link-position-10" style="font-size: 8pt;" aria-label="curl (2 items)">curl</a>
<a href="tag/dynamic/index.html" class="tag-cloud-link tag-link-56 tag-link-position-11" style="font-size: 8pt;" aria-label="dynamic (2 items)">dynamic</a>
<a href="tag/ece231/index.html" class="tag-cloud-link tag-link-34 tag-link-position-12" style="font-size: 10.40625pt;" aria-label="ece231 (4 items)">ece231</a>
<a href="tag/editor/index.html" class="tag-cloud-link tag-link-61 tag-link-position-13" style="font-size: 11.28125pt;" aria-label="editor (5 items)">editor</a>
<a href="tag/error/index.html" class="tag-cloud-link tag-link-46 tag-link-position-14" style="font-size: 9.3125pt;" aria-label="error (3 items)">error</a>
<a href="tag/flash/index.html" class="tag-cloud-link tag-link-41 tag-link-position-15" style="font-size: 17.84375pt;" aria-label="flash (23 items)">flash</a>
<a href="tag/fun/index.html" class="tag-cloud-link tag-link-23 tag-link-position-16" style="font-size: 11.28125pt;" aria-label="fun (5 items)">fun</a>
<a href="tag/gems/index.html" class="tag-cloud-link tag-link-44 tag-link-position-17" style="font-size: 8pt;" aria-label="gems (2 items)">gems</a>
<a href="tag/graphs/index.html" class="tag-cloud-link tag-link-52 tag-link-position-18" style="font-size: 18.390625pt;" aria-label="graphs (26 items)">graphs</a>
<a href="tag/httpi/index.html" class="tag-cloud-link tag-link-191 tag-link-position-19" style="font-size: 8pt;" aria-label="httpi (2 items)">httpi</a>
<a href="tag/java/index.html" class="tag-cloud-link tag-link-177 tag-link-position-20" style="font-size: 9.3125pt;" aria-label="java (3 items)">java</a>
<a href="tag/javascript/index.html" class="tag-cloud-link tag-link-215 tag-link-position-21" style="font-size: 10.40625pt;" aria-label="Javascript (4 items)">Javascript</a>
<a href="tag/linux/index.html" class="tag-cloud-link tag-link-221 tag-link-position-22" style="font-size: 8pt;" aria-label="Linux (2 items)">Linux</a>
<a href="tag/macromovers/index.html" class="tag-cloud-link tag-link-66 tag-link-position-23" style="font-size: 8pt;" aria-label="macromovers (2 items)">macromovers</a>
<a href="tag/mirah/index.html" class="tag-cloud-link tag-link-176 tag-link-position-24" style="font-size: 8pt;" aria-label="mirah (2 items)">mirah</a>
<a href="tag/ofc/index.html" class="tag-cloud-link tag-link-105 tag-link-position-25" style="font-size: 8pt;" aria-label="OFC (2 items)">OFC</a>
<a href="tag/open-flash-chart/index.html" class="tag-cloud-link tag-link-40 tag-link-position-26" style="font-size: 18.609375pt;" aria-label="open flash chart (27 items)">open flash chart</a>
<a href="tag/php/index.html" class="tag-cloud-link tag-link-216 tag-link-position-27" style="font-size: 9.3125pt;" aria-label="php (3 items)">php</a>
<a href="tag/plugin/index.html" class="tag-cloud-link tag-link-65 tag-link-position-28" style="font-size: 12.59375pt;" aria-label="plugin (7 items)">plugin</a>
<a href="tag/plugins/index.html" class="tag-cloud-link tag-link-218 tag-link-position-29" style="font-size: 9.3125pt;" aria-label="plugins (3 items)">plugins</a>
<a href="tag/prog/index.html" class="tag-cloud-link tag-link-35 tag-link-position-30" style="font-size: 9.3125pt;" aria-label="prog (3 items)">prog</a>
<a href="tag/project/index.html" class="tag-cloud-link tag-link-47 tag-link-position-31" style="font-size: 10.40625pt;" aria-label="project (4 items)">project</a>
<a href="tag/rails/index.html" class="tag-cloud-link tag-link-210 tag-link-position-32" style="font-size: 20.90625pt;" aria-label="rails (45 items)">rails</a>
<a href="tag/ruby/index.html" class="tag-cloud-link tag-link-211 tag-link-position-33" style="font-size: 22pt;" aria-label="ruby (57 items)">ruby</a>
<a href="tag/ruby-on-rails/index.html" class="tag-cloud-link tag-link-43 tag-link-position-34" style="font-size: 20.359375pt;" aria-label="ruby on rails (40 items)">ruby on rails</a>
<a href="tag/select-boxes/index.html" class="tag-cloud-link tag-link-57 tag-link-position-35" style="font-size: 8pt;" aria-label="select boxes (2 items)">select boxes</a>
<a href="tag/simple/index.html" class="tag-cloud-link tag-link-62 tag-link-position-36" style="font-size: 10.40625pt;" aria-label="simple (4 items)">simple</a>
<a href="tag/simplecms/index.html" class="tag-cloud-link tag-link-214 tag-link-position-37" style="font-size: 11.28125pt;" aria-label="SimpleCMS (5 items)">SimpleCMS</a>
<a href="tag/skizmo/index.html" class="tag-cloud-link tag-link-102 tag-link-position-38" style="font-size: 10.40625pt;" aria-label="skizmo (4 items)">skizmo</a>
<a href="tag/software/index.html" class="tag-cloud-link tag-link-48 tag-link-position-39" style="font-size: 8pt;" aria-label="software (2 items)">software</a>
<a href="tag/spreadsheet/index.html" class="tag-cloud-link tag-link-45 tag-link-position-40" style="font-size: 8pt;" aria-label="spreadsheet (2 items)">spreadsheet</a>
<a href="tag/tutorial/index.html" class="tag-cloud-link tag-link-50 tag-link-position-41" style="font-size: 16.75pt;" aria-label="tutorial (18 items)">tutorial</a>
<a href="tag/ubuntu/index.html" class="tag-cloud-link tag-link-150 tag-link-position-42" style="font-size: 8pt;" aria-label="ubuntu (2 items)">ubuntu</a>
<a href="tag/vin/index.html" class="tag-cloud-link tag-link-119 tag-link-position-43" style="font-size: 12.59375pt;" aria-label="VIN (7 items)">VIN</a>
<a href="tag/vin-api/index.html" class="tag-cloud-link tag-link-159 tag-link-position-44" style="font-size: 12.046875pt;" aria-label="vin api (6 items)">vin api</a>
<a href="tag/xml/index.html" class="tag-cloud-link tag-link-165 tag-link-position-45" style="font-size: 9.3125pt;" aria-label="xml (3 items)">xml</a></div>
</li>
<li id="categories-524386351" class="widget widget_categories"><h2 class="widgettitle">Topics</h2>

			<ul>
					<li class="cat-item cat-item-179"><a href="category/android/index.html">Android</a>
</li>
	<li class="cat-item cat-item-118"><a href="category/api/index.html">api</a>
</li>
	<li class="cat-item cat-item-67"><a href="category/biking/index.html">biking</a>
</li>
	<li class="cat-item cat-item-37"><a href="category/blog/index.html">blog</a>
</li>
	<li class="cat-item cat-item-27"><a href="category/business/index.html">business</a>
</li>
	<li class="cat-item cat-item-32"><a href="category/c-c/index.html">C / C++</a>
</li>
	<li class="cat-item cat-item-6"><a href="category/development/index.html">development</a>
</li>
	<li class="cat-item cat-item-8"><a href="category/games/index.html">games</a>
</li>
	<li class="cat-item cat-item-139"><a href="category/graphics/index.html">Graphics</a>
</li>
	<li class="cat-item cat-item-3"><a href="category/home/index.html">Home</a>
</li>
	<li class="cat-item cat-item-7"><a href="category/ie-hacks/index.html">IE hacks</a>
</li>
	<li class="cat-item cat-item-31"><a href="category/javascript/index.html">Javascript</a>
</li>
	<li class="cat-item cat-item-149"><a href="category/linux/index.html">Linux</a>
</li>
	<li class="cat-item cat-item-4"><a href="category/me/index.html">me</a>
</li>
	<li class="cat-item cat-item-26"><a href="category/open-flash-chart-graphs/index.html">Open Flash Chart Graphs</a>
</li>
	<li class="cat-item cat-item-29"><a href="category/opengl/index.html">opengl</a>
</li>
	<li class="cat-item cat-item-36"><a href="category/php/index.html">php</a>
</li>
	<li class="cat-item cat-item-51"><a href="category/plugins/index.html">plugins</a>
</li>
	<li class="cat-item cat-item-14"><a href="category/projects/index.html">projects</a>
</li>
	<li class="cat-item cat-item-5"><a href="category/rails/index.html">rails</a>
</li>
	<li class="cat-item cat-item-10"><a href="category/railsconf/index.html">railsconf</a>
</li>
	<li class="cat-item cat-item-9"><a href="category/ruby/index.html">ruby</a>
</li>
	<li class="cat-item cat-item-28"><a href="category/simplecms/index.html">SimpleCMS</a>
</li>
	<li class="cat-item cat-item-30"><a href="category/tutorials/index.html">tutorials</a>
</li>
	<li class="cat-item cat-item-1"><a href="category/uncategorized/index.html">Uncategorized</a>
</li>
			</ul>

			</li>

		<li id="recent-posts-2" class="widget widget_recent_entries">
		<h2 class="widgettitle">Recent Posts</h2>

		<ul>
											<li>
					<a href="index.html?p=57726">Dynamic Select Boxes &#8211; Ruby on Rails 3</a>
									</li>
											<li>
					<a href="index.html?p=57715">VIN API &#8211; Do you know about the complete data set?</a>
									</li>
											<li>
					<a href="index.html?p=57712">Using Ruby to read from a MagTek USB Card Reader</a>
									</li>
											<li>
					<a href="index.html?p=57708">Signature Pad in Linux</a>
									</li>
											<li>
					<a href="index.html?p=57705">Using HTTPI with Curb to do multipart file uploads with spnego</a>
									</li>
					</ul>

		</li>
<li id="recent-comments-2" class="widget widget_recent_comments"><h2 class="widgettitle">Recent Comments</h2>
<ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link">`Drew</span> on <a href="2012/08/11/dynamic-select-boxes-ruby-on-rails-3/comment-page-1/index.html#comment-24291">Dynamic Select Boxes &#8211; Ruby on Rails 3</a></li><li class="recentcomments"><span class="comment-author-link">Bardach</span> on <a href="2012/08/11/dynamic-select-boxes-ruby-on-rails-3/comment-page-1/index.html#comment-24290">Dynamic Select Boxes &#8211; Ruby on Rails 3</a></li><li class="recentcomments"><span class="comment-author-link">Bardach</span> on <a href="2012/08/11/dynamic-select-boxes-ruby-on-rails-3/comment-page-1/index.html#comment-24289">Dynamic Select Boxes &#8211; Ruby on Rails 3</a></li><li class="recentcomments"><span class="comment-author-link">Dar_bok</span> on <a href="2007/04/30/how-i-got-gta-san-andreas-to-work-with-a-crappy-os-vista/comment-page-2/index.html#comment-20844">How I got GTA San Andreas to Work with (a crappy OS) Vista</a></li><li class="recentcomments"><span class="comment-author-link">Anirudha Pendakur</span> on <a href="2012/07/25/using-httpi-with-curb-to-do-multipart-file-uploads-with-spnego/comment-page-1/index.html#comment-19583">Using HTTPI with Curb to do multipart file uploads with spnego</a></li></ul></li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>

			<ul>
					<li><a href='2012/08/index.html'>August 2012</a></li>
	<li><a href='2012/07/index.html'>July 2012</a></li>
	<li><a href='2012/05/index.html'>May 2012</a></li>
	<li><a href='2012/04/index.html'>April 2012</a></li>
	<li><a href='2012/03/index.html'>March 2012</a></li>
	<li><a href='2011/11/index.html'>November 2011</a></li>
	<li><a href='2011/10/index.html'>October 2011</a></li>
	<li><a href='2011/05/index.html'>May 2011</a></li>
	<li><a href='2011/03/index.html'>March 2011</a></li>
	<li><a href='2011/02/index.html'>February 2011</a></li>
	<li><a href='2011/01/index.html'>January 2011</a></li>
	<li><a href='2010/11/index.html'>November 2010</a></li>
	<li><a href='2010/09/index.html'>September 2010</a></li>
	<li><a href='2010/04/index.html'>April 2010</a></li>
	<li><a href='2010/02/index.html'>February 2010</a></li>
	<li><a href='2010/01/index.html'>January 2010</a></li>
	<li><a href='2009/12/index.html'>December 2009</a></li>
	<li><a href='2009/10/index.html'>October 2009</a></li>
	<li><a href='2009/09/index.html'>September 2009</a></li>
	<li><a href='2009/08/index.html'>August 2009</a></li>
	<li><a href='2009/04/index.html'>April 2009</a></li>
	<li><a href='2009/03/index.html'>March 2009</a></li>
	<li><a href='2009/02/index.html'>February 2009</a></li>
	<li><a href='2009/01/index.html'>January 2009</a></li>
	<li><a href='2008/10/index.html'>October 2008</a></li>
	<li><a href='2008/09/index.html'>September 2008</a></li>
	<li><a href='2008/08/index.html'>August 2008</a></li>
	<li><a href='2008/07/index.html'>July 2008</a></li>
	<li><a href='2008/04/index.html'>April 2008</a></li>
	<li><a href='2008/03/index.html'>March 2008</a></li>
	<li><a href='2008/02/index.html'>February 2008</a></li>
	<li><a href='2008/01/index.html'>January 2008</a></li>
	<li><a href='2007/12/index.html'>December 2007</a></li>
	<li><a href='2007/10/index.html'>October 2007</a></li>
	<li><a href='2007/09/index.html'>September 2007</a></li>
	<li><a href='2007/08/index.html'>August 2007</a></li>
	<li><a href='2007/06/index.html'>June 2007</a></li>
	<li><a href='2007/05/index.html'>May 2007</a></li>
	<li><a href='2007/04/index.html'>April 2007</a></li>
			</ul>

			</li>
	</ul>
    
    </div><!-- Sidebar -->

</div><!-- Rightcolumn -->



<br clear="all" />

<div id="footer">
<p>Copyright 2009, powered by <a href="http://www.wordpress.org/">WordPress</a></p>
</div><!-- Footer -->

</div><!-- Wrapper -->

<br clear="all" />
</div><!-- Container -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>

<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-3308745-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>
</body>
</html>